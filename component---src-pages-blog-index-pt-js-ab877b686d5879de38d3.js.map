{"version":3,"sources":["webpack:///./src/pages/blog/index.pt.js","webpack:///./src/components/A.js","webpack:///./src/components/Link.js","webpack:///./src/components/Time.js","webpack:///./src/components/PostAuthor.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/PostCard.js","webpack:///./src/components/PostCardList.js","webpack:///./src/components/H1.js","webpack:///./src/components/pages/Blog.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_pages_Blog__WEBPACK_IMPORTED_MODULE_1__","props","a","createElement","A","styled","withConfig","displayName","componentId","theme","color","textDecoration","hover","withComponent","Link","Time","react_default","Object","assign","dateTime","date","index_es","value","Date","month","day","year","propTypes","PropTypes","string","isRequired","Wrapper","Grid","blog","author","fontFamily","fontSize","lineHeight","span","time","ProfilePicture","Gravatar","FollowButton","PostAuthor","_ref","minutes","cups","className","showFollow","timeToRead","columns","styled_css_grid_esm","middle","email","alt","name","width","height","href","twitter","target","PostAuthor_Date","components_Time","pubdate","Math","round","Array","fill","join","object","bool","number","GridContainer","list","item","border","Body","Cell","padding","Footer","scale","Title","h2","title","margin","TitleLink","Text","p","text","Label","div","Image","Img","PostCard","_ref2","post","imageOnTop","rows","to","fields","slug","sizes","frontmatter","image","childImageSharp","excerpt","fillRule","shape","langKey","PostCardList","gap","alignContent","posts","map","key","components_PostCard","array","H1","h1","textAlign","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_PostCardList__WEBPACK_IMPORTED_MODULE_2__","_H1__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","react_intl__WEBPACK_IMPORTED_MODULE_5__","_layout__WEBPACK_IMPORTED_MODULE_6__","Blog","data","site","siteMetadata","location","id","txt","meta","content","allMarkdownRemark","edges","node"],"mappings":"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","file":"component---src-pages-blog-index-pt-js-ab877b686d5879de38d3.js","sourcesContent":["import React from 'react';\nimport Blog from '../../components/pages/Blog';\nimport { graphql } from 'gatsby';\n\nexport default (props) => <Blog {...props} />;\n\nexport const pageQuery = graphql`\n  query BlogPtQuery {\n    site {\n      siteMetadata {\n        author {\n          name\n          homeCity\n          email\n          defaultLink\n        }\n      }\n    },\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { draft: { ne: true } },\n        fields: { langKey: { regex: \"/(pt|any)/\" } }\n      },\n    ) {\n      edges {\n        node{\n          frontmatter{\n            title,\n            tags,\n            date,\n            image {\n              childImageSharp{\n                  sizes(maxWidth: 750) {\n                      ...GatsbyImageSharpSizes\n                  }\n              }\n            }\n          },\n          fields{\n            slug,\n            langKey,\n            tagSlugs{\n              tag,\n              link\n            }\n          },\n          excerpt\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nconst A = styled.a`\n    color: ${props => props.theme.a.color};\n    text-decoration: ${props => props.theme.a.textDecoration};\n    cursor: pointer;\n    transition: 0.3s;\n\n    &:hover {\n        color: ${props => props.theme.a.hover.color};\n        transition: 0.3s;\n    }\n`;\n\nexport default A;\n","import { Link } from 'gatsby';\nimport A from './A';\n\nexport default A.withComponent(Link);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedDate } from 'react-intl';\n\nconst Time = (props) => {\n  return (\n    <time {...props} dateTime={props.date}>\n      <FormattedDate\n        value={new Date(props.date)}\n        month=\"long\"\n        day=\"numeric\"\n        year=\"numeric\"\n      />\n    </time>\n  );\n};\n\nTime.propTypes = {\n  date: PropTypes.string.isRequired\n};\n\nexport default Time;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\nimport Gravatar from 'react-gravatar';\nimport Time from '../components/Time';\nimport { formatReadingTime } from '../utils/helpers'\n\nconst Wrapper = styled(Grid)`\n  font-family: ${props => props.theme.blog.author.fontFamily};\n  font-size: ${props => props.theme.blog.author.fontSize};\n  line-height: ${props => props.theme.blog.author.lineHeight};\n`;\n\nconst Date = styled.span`\n  color: ${props => props.theme.blog.author.time.color};\n  display: block;\n`;\n\nconst ProfilePicture = styled(Gravatar)`\n  display: block;\n  border-radius: 50%;\n`;\n\nconst FollowButton = styled.a`\n  display: inline-block;\n  vertical-align: middle;\n  cursor: pointer;\n  height: 19px;\n  padding: 0 10px;\n  color: rgba(0,0,0,.84);\n  border: 1px solid rgba(0,0,0,.68);\n  border-radius: 4px;\n  user-select: none!important;\n  margin: 0 14px 4px;\n  span {\n    font-size: 13px;\n    line-height: 19px;\n    padding-bottom: 2px;\n  }\n`;\n\nconst PostAuthor = ({ author, className, date, showFollow, timeToRead }) => {\n  return (\n    <Wrapper columns={'50px 1fr'} className={className}>\n      <Cell middle>\n        <ProfilePicture email={author.email} alt={author.name} width={42} height={42} />\n      </Cell>\n      <Cell middle>\n        <span>\n          {author.name}\n          { showFollow \n            ? <FollowButton href={`http://twitter.com/${author.twitter}`} target=\"_blank\">\n              <span>Follow</span>\n            </FollowButton> \n            : null }\n        </span>\n        <Date>\n          <Time\n            pubdate=\"pubdate\"\n            date={date}\n          />{timeToRead && ` • ${formatReadingTime(timeToRead)}`}\n        </Date>\n      </Cell>\n    </Wrapper>\n  );\n};\n\nPostAuthor.propTypes = {\n  author: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  date: PropTypes.string.isRequired,\n  showFollow: PropTypes.bool,\n  timeToRead: PropTypes.number\n};\n\nexport default PostAuthor;\n","export const formatReadingTime = (minutes) => {\n  let cups = Math.round(minutes / 5);\n  return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from './Link';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\nimport Img from 'gatsby-image';\nimport Author from './PostAuthor';\n\n\nconst GridContainer = styled(Grid)`\n  height: 100%;\n`;\n\nconst Wrapper = styled(GridContainer)`\n  border: ${props => props.theme.blog.list.item.border};\n  border-radius: 0.25rem;\n`;\n\nconst Body = styled(Cell)`\n  padding: ${props => props.theme.blog.list.item.padding};\n`;\n\nconst Footer = styled(Cell)`\n  font-family: ${props => props.theme.blog.author.fontFamily};\n  font-size: ${props => props.theme.blog.author.fontSize};\n  padding: ${({ theme }) => `${theme.scale(-1.5)} ${theme.scale(1.2)} ${theme.scale(0)}`};\n  line-height: ${props => props.theme.blog.author.lineHeight};\n  height: auto;\n  position: relative;\n`;\n\nconst Title = styled.h2`\n  padding: 0;\n  font-family: ${props => props.theme.blog.list.item.title.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.title.fontSize};\n  line-height: ${props => props.theme.blog.list.item.title.lineHeight};\n  margin: ${props => props.theme.blog.list.item.title.margin};\n`;\n\nconst TitleLink = styled(Link)`\n  color: ${props => props.theme.blog.list.item.title.color};\n  &:hover {\n    color: ${props => props.theme.blog.list.item.title.hover.color};\n  }\n`;\n\nconst Text = styled.p`\n  font-family: ${props => props.theme.blog.list.item.text.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.text.fontSize};\n  color: ${props => props.theme.blog.list.item.text.color};\n  margin: ${props => props.theme.blog.list.item.text.margin};\n  padding: ${props => props.theme.blog.list.item.text.padding};\n  line-height: ${props => props.theme.blog.list.item.text.lineHeight};\n`;\n\nconst Label = styled.div`\n  position: absolute;\n  right: 18px;\n  bottom: 18px;\n`;\n\nconst Image = styled(Img)`\n  height: 100%;\n`;\n\n\nconst PostCard = ({ post, author, imageOnTop }) => {\n  return (\n    <Wrapper rows={imageOnTop ? 2 : 1} columns={imageOnTop ? '1fr' : '3fr 5fr'}>\n      <Cell>\n        <Link to={post.fields.slug}>\n          <Image sizes={post.frontmatter.image.childImageSharp.sizes} />\n        </Link>\n      </Cell>\n      <Cell>\n        <GridContainer columns={1} rows={'1fr auto'}>\n          <Body>\n            <Title>\n              <TitleLink to={post.fields.slug}>\n                {post.frontmatter.title}\n              </TitleLink>\n            </Title>\n            <Text>{post.excerpt}</Text>\n          </Body>\n          <Footer>\n            <Author author={author} date={post.frontmatter.date} />\n            <Label>\n              <Link to={post.fields.slug}>\n                <svg width=\"25\" height=\"25\"><path d=\"M19 6c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v14.66h.012c.01.103.045.204.12.285a.5.5 0 0 0 .706.03L12.5 16.85l5.662 4.126a.508.508 0 0 0 .708-.03.5.5 0 0 0 .118-.285H19V6zm-6.838 9.97L7 19.636V6c0-.55.45-1 1-1h9c.55 0 1 .45 1 1v13.637l-5.162-3.668a.49.49 0 0 0-.676 0z\" fillRule=\"evenodd\" /></svg>\n              </Link>\n            </Label>\n          </Footer>\n        </GridContainer>\n      </Cell>\n    </Wrapper>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    fields: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      langKey: PropTypes.string.isRequired\n    }),\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired\n    }),\n    excerpt: PropTypes.string.isRequired\n  }),\n  author: PropTypes.object.isRequired,\n  imageOnTop: PropTypes.bool\n};\n\nexport default PostCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostCard from './PostCard';\nimport { Grid, Cell } from 'styled-css-grid';\n\nconst PostCardList = (props) => {\n  return (\n    <nav>\n      <Grid columns=\"repeat(auto-fit,minmax(360px,1fr))\" gap=\"30px\" alignContent=\"stretch\">\n        {props.posts.map(post =>\n          <Cell key={post.fields.slug}>\n            <PostCard post={post} {...props} />\n          </Cell>\n        )}\n      </Grid>\n    </nav>\n  );\n};\n\nPostCardList.propTypes = {\n  posts: PropTypes.array.isRequired,\n  author: PropTypes.object.isRequired,\n  imageOnTop: PropTypes.bool\n};\n\nexport default PostCardList;\n","import styled from 'styled-components';\n\nconst H1 = styled.h1`\n  font-size: ${props => props.theme.h1.fontSize};\n  margin: ${props => props.theme.h1.margin};\n  padding: ${props => props.theme.h1.padding};\n  text-align: ${props => props.theme.h1.textAlign};\n`;\n\nexport default H1;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostCardList from '../PostCardList';\nimport H1 from '../H1';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport Layout from '../layout';\n\nconst Blog = (props) => {\n  const { author } = props.data.site.siteMetadata;\n  return (\n    <Layout location={props.location}>\n      <section className=\"posts\">\n        <FormattedMessage id=\"posts\">\n          {(txt) => (\n            <header>\n              <Helmet\n                title={txt}\n                meta={[{ name: 'description', content: txt }]}\n              />\n              <H1>\n                {txt}\n              </H1>\n            </header>\n          )}\n        </FormattedMessage>\n        <PostCardList\n          posts={props.data.allMarkdownRemark.edges.map(p => p.node)} author={author}\n        />\n      </section>\n    </Layout>\n  );\n};\n\nBlog.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default Blog;\n"],"sourceRoot":""}