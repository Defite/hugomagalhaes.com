{"version":3,"sources":["webpack:///./src/templates/tag-page.js","webpack:///./src/components/A.js","webpack:///./src/components/Link.js","webpack:///./src/components/Time.js","webpack:///./src/components/PostAuthor.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/PostCard.js","webpack:///./src/components/PostCardList.js","webpack:///./src/components/BtnLink.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","styled_components__WEBPACK_IMPORTED_MODULE_3__","_components_PostCardList__WEBPACK_IMPORTED_MODULE_4__","react_intl__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","_components_layout__WEBPACK_IMPORTED_MODULE_7__","_components_BtnLink__WEBPACK_IMPORTED_MODULE_8__","Wrapper","styled","section","withConfig","displayName","componentId","props","theme","page","margin","padding","Header","header","fontFamily","H1","h1","_ref","scale","TagRoute","_ref2","data","pageContext","location","posts","allMarkdownRemark","edges","map","p","node","author","site","siteMetadata","console","log","langKey","allTagsLink","a","createElement","id","txt","to","title","tag","meta","name","content","values","nPosts","totalCount","propTypes","PropTypes","object","isRequired","A","color","textDecoration","hover","withComponent","Link","Time","react_default","Object","assign","dateTime","date","index_es","value","Date","month","day","year","string","Grid","blog","fontSize","lineHeight","span","time","ProfilePicture","Gravatar","FollowButton","PostAuthor","minutes","cups","className","showFollow","timeToRead","columns","styled_css_grid_esm","middle","email","alt","width","height","href","twitter","target","PostAuthor_Date","components_Time","pubdate","Math","round","Array","fill","join","bool","number","GridContainer","list","item","border","media","md","_templateObject","imageOnTop","Body","Cell","Footer","Title","h2","TitleLink","Text","text","Label","div","Image","Img","PostCard","post","fields","slug","sizes","frontmatter","image","childImageSharp","rows","excerpt","fillRule","shape","PostCardList","gap","alignContent","key","components_PostCard","array","gatsby__WEBPACK_IMPORTED_MODULE_0__","styled_components__WEBPACK_IMPORTED_MODULE_1__","BtnLink","fonts","SansSerif","colors","white","_ref3","_ref4","black","blackShades","_ref5"],"mappings":"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","file":"component---src-templates-tag-page-js-e1442b5c46ba76395057.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\nimport styled from 'styled-components';\nimport PostCardList from '../components/PostCardList';\nimport { FormattedMessage } from 'react-intl';\nimport Helmet from 'react-helmet';\nimport Layout from '../components/layout';\nimport BtnLink from '../components/BtnLink';\n\nconst Wrapper = styled.section`\n  margin: ${props => props.theme.page.margin};\n  padding: ${props => props.theme.page.padding};\n`;\n\nconst Header = styled.header`\n  font-family: ${props => props.theme.page.header.fontFamily};\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n  margin: ${props => props.theme.page.header.margin};\n`;\n\nconst H1 = styled.h1`\n  font-size: 1.8rem;\n  padding: 0;\n  span {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.44);\n    display: inline-block;\n    padding-bottom: ${({ theme }) => theme.scale(3.5)};\n    margin-bottom: -1px;\n  }\n`;\n\nconst TagRoute = ({ data, pageContext, location }) => {\n  const posts = data.allMarkdownRemark.edges.map(p => p.node);\n  const { author } = data.site.siteMetadata;\n  console.log('[dev:hugo] pageContext.langKey', pageContext.langKey);\n\n  const allTagsLink = (\n    <FormattedMessage id=\"tags.allTagsLink\">\n      {(txt) => (\n        <BtnLink to={`/tags/`}>\n          {txt}\n        </BtnLink>\n      )}\n    </FormattedMessage>\n  );\n\n  return (\n    <Layout location={location}>\n      <Wrapper>\n        <FormattedMessage id=\"tags\">\n          {(txt) => (\n            <Header>\n              <Helmet\n                title={`${pageContext.tag} | ${txt}`}\n                meta={[{ name: 'description', content: txt }]}\n              />\n              <H1>\n                <span>\n                  <FormattedMessage id=\"tags.nPostsTaggedWith\" values={{ nPosts: data.allMarkdownRemark.totalCount }}>\n                    {(txt) => (\n                      `${txt} \"${pageContext.tag}\"`\n                    )}\n                  </FormattedMessage>\n                </span>\n              </H1>\n            </Header>\n          )}\n        </FormattedMessage>\n        <PostCardList\n          posts={posts} author={author}\n        />\n        <footer>\n          {allTagsLink}\n        </footer>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nTagRoute.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object.isRequired,\n  pageContext: PropTypes.object\n};\n\nexport default TagRoute;\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String, $langKey: String) {\n  site {\n    siteMetadata {\n      author {\n        name\n        homeCity\n        email\n        defaultLink\n      }\n    }\n  },\n  allMarkdownRemark(limit: 1000,\n    sort: {fields: [frontmatter___date], order: DESC},\n    filter: {\n      frontmatter: {\n        tags: {in: [$tag]},\n        draft: {ne: true}\n      },\n      fields: {\n        langKey: {eq: $langKey}\n      }\n    }) {\n    totalCount\n    edges {\n      node {\n        frontmatter{\n          title,\n          date,\n          image {\n            childImageSharp{\n                sizes(maxWidth: 750) {\n                    ...GatsbyImageSharpSizes\n                }\n            }\n          }\n        },\n        fields{\n          slug\n          langKey\n        },\n        excerpt\n      }\n    }\n  }\n  }\n`;\n","import styled from 'styled-components';\n\nconst A = styled.a`\n    color: ${props => props.theme.a.color};\n    text-decoration: ${props => props.theme.a.textDecoration};\n    cursor: pointer;\n    transition: 0.3s;\n\n    &:hover {\n        color: ${props => props.theme.a.hover.color};\n        transition: 0.3s;\n    }\n`;\n\nexport default A;\n","import { Link } from 'gatsby';\nimport A from './A';\n\nexport default A.withComponent(Link);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedDate } from 'react-intl';\n\nconst Time = (props) => {\n  return (\n    <time {...props} dateTime={props.date}>\n      <FormattedDate\n        value={new Date(props.date)}\n        month=\"long\"\n        day=\"numeric\"\n        year=\"numeric\"\n      />\n    </time>\n  );\n};\n\nTime.propTypes = {\n  date: PropTypes.string.isRequired\n};\n\nexport default Time;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\nimport Gravatar from 'react-gravatar';\nimport Time from '../components/Time';\nimport { formatReadingTime } from '../utils/helpers'\n\nconst Wrapper = styled(Grid)`\n  font-family: ${props => props.theme.blog.author.fontFamily};\n  font-size: ${props => props.theme.blog.author.fontSize};\n  line-height: ${props => props.theme.blog.author.lineHeight};\n`;\n\nconst Date = styled.span`\n  color: ${props => props.theme.blog.author.time.color};\n  display: block;\n`;\n\nconst ProfilePicture = styled(Gravatar)`\n  display: block;\n  border-radius: 50%;\n`;\n\nconst FollowButton = styled.a`\n  display: inline-block;\n  vertical-align: middle;\n  cursor: pointer;\n  height: 19px;\n  padding: 0 10px;\n  color: rgba(0,0,0,.84);\n  border: 1px solid rgba(0,0,0,.68);\n  border-radius: 4px;\n  user-select: none!important;\n  margin: 0 14px 4px;\n  span {\n    font-size: 13px;\n    line-height: 19px;\n    padding-bottom: 2px;\n  }\n`;\n\nconst PostAuthor = ({ author, className, date, showFollow, timeToRead }) => {\n  return (\n    <Wrapper columns={'50px 1fr'} className={className}>\n      <Cell middle>\n        <ProfilePicture email={author.email} alt={author.name} width={42} height={42} />\n      </Cell>\n      <Cell middle>\n        <span>\n          {author.name}\n          { showFollow \n            ? <FollowButton href={`http://twitter.com/${author.twitter}`} target=\"_blank\">\n              <span>Follow</span>\n            </FollowButton> \n            : null }\n        </span>\n        <Date>\n          <Time\n            pubdate=\"pubdate\"\n            date={date}\n          />{timeToRead && ` • ${formatReadingTime(timeToRead)}`}\n        </Date>\n      </Cell>\n    </Wrapper>\n  );\n};\n\nPostAuthor.propTypes = {\n  author: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  date: PropTypes.string.isRequired,\n  showFollow: PropTypes.bool,\n  timeToRead: PropTypes.number\n};\n\nexport default PostAuthor;\n","export const formatReadingTime = (minutes) => {\n  let cups = Math.round(minutes / 5);\n  return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from './Link';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\nimport Img from 'gatsby-image';\nimport Author from './PostAuthor';\nimport { media } from '../constants/responsive';\n\n\nconst GridContainer = styled(Grid)`\n  height: 100%;\n`;\n\nconst Wrapper = styled(GridContainer)`\n  border: ${props => props.theme.blog.list.item.border};\n  border-radius: 0.25rem;\n  grid-template-rows: repeat(1,1fr);\n  grid-template-columns: 3fr 5fr;\n  ${media.md`\n    ${props => props.imageOnTop\n    ? ` grid-template-rows: repeat(2,1fr);\n        grid-template-columns: 1fr;`\n    : ''};\n  `}\n`;\n\nconst Body = styled(Cell)`\n  padding: ${props => props.theme.blog.list.item.padding};\n`;\n\nconst Footer = styled(Cell)`\n  font-family: ${props => props.theme.blog.author.fontFamily};\n  font-size: ${props => props.theme.blog.author.fontSize};\n  padding: ${({ theme }) => `${theme.scale(-1.5)} ${theme.scale(1.2)} ${theme.scale(0)}`};\n  line-height: ${props => props.theme.blog.author.lineHeight};\n  height: auto;\n  position: relative;\n`;\n\nconst Title = styled.h2`\n  padding: 0;\n  font-family: ${props => props.theme.blog.list.item.title.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.title.fontSize};\n  line-height: ${props => props.theme.blog.list.item.title.lineHeight};\n  margin: ${props => props.theme.blog.list.item.title.margin};\n`;\n\nconst TitleLink = styled(Link)`\n  color: ${props => props.theme.blog.list.item.title.color};\n  &:hover {\n    color: ${props => props.theme.blog.list.item.title.hover.color};\n  }\n`;\n\nconst Text = styled.p`\n  font-family: ${props => props.theme.blog.list.item.text.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.text.fontSize};\n  color: ${props => props.theme.blog.list.item.text.color};\n  margin: ${props => props.theme.blog.list.item.text.margin};\n  padding: ${props => props.theme.blog.list.item.text.padding};\n  line-height: ${props => props.theme.blog.list.item.text.lineHeight};\n`;\n\nconst Label = styled.div`\n  position: absolute;\n  right: 18px;\n  bottom: 18px;\n`;\n\nconst Image = styled(Img)`\n  height: 100%;\n`;\n\n\nconst PostCard = ({ post, author, imageOnTop }) => {\n  return (\n    <Wrapper imageOnTop={imageOnTop}>\n      <Cell>\n        <Link to={post.fields.slug}>\n          <Image sizes={post.frontmatter.image.childImageSharp.sizes} />\n        </Link>\n      </Cell>\n      <Cell>\n        <GridContainer columns={1} rows={'1fr auto'}>\n          <Body>\n            <Title>\n              <TitleLink to={post.fields.slug}>\n                {post.frontmatter.title}\n              </TitleLink>\n            </Title>\n            <Text>{post.excerpt}</Text>\n          </Body>\n          <Footer>\n            <Author author={author} date={post.frontmatter.date} />\n            <Label>\n              <Link to={post.fields.slug}>\n                <svg width=\"25\" height=\"25\"><path d=\"M19 6c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v14.66h.012c.01.103.045.204.12.285a.5.5 0 0 0 .706.03L12.5 16.85l5.662 4.126a.508.508 0 0 0 .708-.03.5.5 0 0 0 .118-.285H19V6zm-6.838 9.97L7 19.636V6c0-.55.45-1 1-1h9c.55 0 1 .45 1 1v13.637l-5.162-3.668a.49.49 0 0 0-.676 0z\" fillRule=\"evenodd\" /></svg>\n              </Link>\n            </Label>\n          </Footer>\n        </GridContainer>\n      </Cell>\n    </Wrapper>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    fields: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      langKey: PropTypes.string.isRequired\n    }),\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired\n    }),\n    excerpt: PropTypes.string.isRequired\n  }),\n  author: PropTypes.object.isRequired,\n  imageOnTop: PropTypes.bool\n};\n\nexport default PostCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostCard from './PostCard';\nimport { Grid, Cell } from 'styled-css-grid';\n\nconst PostCardList = (props) => {\n  return (\n    <nav>\n      <Grid columns=\"repeat(auto-fit,minmax(260px,1fr))\" gap=\"30px\" alignContent=\"stretch\">\n        {props.posts.map(post =>\n          <Cell key={post.fields.slug}>\n            <PostCard post={post} {...props} />\n          </Cell>\n        )}\n      </Grid>\n    </nav>\n  );\n};\n\nPostCardList.propTypes = {\n  posts: PropTypes.array.isRequired,\n  author: PropTypes.object.isRequired,\n  imageOnTop: PropTypes.bool\n};\n\nexport default PostCardList;\n","import { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst BtnLink = styled(Link)`\n    font-family: ${({theme}) => theme.fonts.SansSerif};\n    background-color: ${({theme}) => theme.colors.white};\n    padding: 1rem;\n    margin: ${({theme}) => theme.scale(2)} auto;\n    color: ${({theme}) => theme.colors.black};\n    border-radius: 0.2rem;\n    text-decoration: none;\n    display: table;\n    transition: 0.3s;\n\n    &:hover {\n        background-color: ${props => props.theme.colors.blackShades[0]};\n        color: ${({theme}) => theme.colors.white};\n        transition: 0.3s;\n    }\n`;\n\nexport default BtnLink;\n"],"sourceRoot":""}