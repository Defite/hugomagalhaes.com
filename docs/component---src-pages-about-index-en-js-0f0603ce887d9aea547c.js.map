{"version":3,"sources":["webpack:///./src/pages/about/index.en.js","webpack:///./src/components/H1.js","webpack:///./src/data/authors.js","webpack:///./src/components/BigFirstLetter.js","webpack:///./src/structuredData.js","webpack:///./src/components/AboutPage.js"],"names":["i18n","description","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","descriptionForGoogle","__webpack_exports__","props","_components_AboutPage__WEBPACK_IMPORTED_MODULE_2__","Object","assign","H1","__webpack_require__","styled","h1","withConfig","displayName","componentId","theme","fontSize","margin","padding","textAlign","authors","hugomn","name","additionalName","address","birthDate","birthPlace","brand","children","email","familyName","gender","givenName","height","homeLocation","jobTitle","knows","memberOf","nationality","owns","parent","performerIn","publishingPrinciples","relatedTo","seeks","sibling","spouse","telephone","weight","workLocation","worksFor","disambiguatingDescription","identifier","image","sameAs","url","module","exports","getAuthor","id","author","@type","BigFirstLetter","section","p","lineHeight","firstLetter","color","filterObj","curry","fn","obj","isNilOrEmpty","keys","reduce","newObj","key","value","cleanStructuredData","v","isNotNilOrEmpty","renameType","addContext","structuredData","getDate","pipe","prop","getHeadline","getArticleBody","getLangKey","getStructuredData","markdownRemark","assocPath","JSON","stringify","getStructuredDataForAuthor","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_H1__WEBPACK_IMPORTED_MODULE_2__","_data_authors__WEBPACK_IMPORTED_MODULE_3__","_structuredData__WEBPACK_IMPORTED_MODULE_4__","_BigFirstLetter__WEBPACK_IMPORTED_MODULE_5__","styled_components__WEBPACK_IMPORTED_MODULE_6__","react_intl__WEBPACK_IMPORTED_MODULE_7__","react_helmet__WEBPACK_IMPORTED_MODULE_8__","react_helmet__WEBPACK_IMPORTED_MODULE_8___default","_components_layout__WEBPACK_IMPORTED_MODULE_9__","Header","header","_ref","scale","AboutPage","location","type","dangerouslySetInnerHTML","__html","txt","title","meta","content","propTypes","PropTypes","shape","object","isRequired","string"],"mappings":"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","file":"component---src-pages-about-index-en-js-0f0603ce887d9aea547c.js","sourcesContent":["import React from 'react';\nimport AboutMe from '../../components/AboutPage';\n\nconst i18n = {\n  description: (\n    <p>\n      Hi! I am Ângelo, a Freelance Full-Stack Developer since 2007.\n      My professional journey started when I was 14 years-old. \n      Since then, I have been passionate about programming.  <br /><br />\n      \n      Most recently, I have my mindset on TDD, Functional Programming, Offline First, Mobile First\n      and Frog Cloud. <br /><br />\n\n      I’m an Arch Linux user and Nodejs Developer.\n    </p>\n  ),\n  descriptionForGoogle: `\n    My professional journey started when I was 14 years-old. Since then, I have been passionate about programming. Most recently, I have my mindset on TDD, Functional Programming, Offline First, Mobile First \n    and Frog Cloud.\n    \n    I’m an Arch Linux user.\n  `\n};\n\nexport default (props) => <AboutMe i18n={i18n} {...props} />;\n","import styled from 'styled-components';\n\nconst H1 = styled.h1`\n  font-size: ${props => props.theme.h1.fontSize};\n  margin: ${props => props.theme.h1.margin};\n  padding: ${props => props.theme.h1.padding};\n  text-align: ${props => props.theme.h1.textAlign};\n`;\n\nexport default H1;\n","const authors = {\n  hugomn: {\n    name: 'Hugo Nogueira',\n    additionalName: 'hugomn',\n    address: 'Berlin CA',\n    birthDate: '1986-09-01',\n    birthPlace: 'Juiz de Fora BR',\n    brand: 'Hugo Nogueira, Software Engineer, Lead Front-end engineer, Senior ReactJs developer',\n    children: '...',\n    email: 'hugomn@gmail.com',\n    familyName: 'Nogueira',\n    gender: 'Male',\n    givenName: 'Hugo',\n    height: '...',\n    homeLocation: 'Berlin',\n    jobTitle: 'Software Engineering Lead',\n    knows: '...',\n    memberOf: '...',\n    nationality: 'Brazilian',\n    owns: '...',\n    parent: '...',\n    performerIn: '...',\n    publishingPrinciples: '...',\n    relatedTo: '...',\n    seeks: '...',\n    sibling: '...',\n    spouse: {\n      additionalName: 'Lunara Leto Costa',\n      name: 'Lunara Leto Costa',\n      givenName: 'Lunara',\n      familyName: 'Costa',\n      gender: 'Female',\n      nationality: 'Brazilian',\n      homeLocation: 'Berlin'\n    },\n    telephone: '...',\n    weight: '...',\n    workLocation: '...',\n    worksFor: '...',\n    description: '...',\n    disambiguatingDescription: '...',\n    identifier: '...',\n    image: 'http://www.gravatar.com/avatar/9174fca44b5ca403593ac9cb2407e0e7',\n    sameAs: 'https://hugomagalhaes.com/en/about/',\n    url: 'https://hugomagalhaes.com/en/about/'\n  }\n};\n\nconst getAuthor = (id) => {\n  const author = {\n    ...authors[id],\n    '@type': 'Person'\n  };\n  return author\n    ? author\n    : authors[0];\n};\n\nmodule.exports = {\n  authors,\n  getAuthor\n};\n","import styled from 'styled-components';\n\nconst BigFirstLetter = styled.section`\n  p{\n    font-size: ${props => props.theme.p.fontSize};\n    line-height: ${props => props.theme.p.lineHeight};\n  }\n\n  p:first-of-type::first-letter {\n      font-size: ${props => props.theme.p.firstLetter.fontSize};\n      color: ${props => props.theme.p.firstLetter.color};\n      float: left;\n      line-height: ${props => props.theme.p.firstLetter.lineHeight};\n      padding: ${props => props.theme.p.firstLetter.padding};\n      margin: ${props => props.theme.p.firstLetter.margin};\n  }\n`;\n\nexport default BigFirstLetter;\n","import { assocPath, curry, pipe, prop, keys } from 'ramda';\nimport { isNilOrEmpty, isNotNilOrEmpty } from 'ptz-fp';\nimport { getAuthor } from './data/authors';\n\nconst filterObj = curry((fn, obj) => {\n  if (isNilOrEmpty(obj)) return obj;\n\n  return keys(obj).reduce((newObj, key) => {\n    const value = obj[key];\n\n    if (typeof value === 'object') {\n      newObj[key] = filterObj(fn, obj[key]);\n    } else if (fn(value)) {\n      newObj[key] = obj[key];\n    }\n\n    return newObj;\n  }, {});\n});\n\n/**\n * Remove null fields and fields that has value equal to '...'\n * @param  {Object} structuredData google structured data\n * @return {Object}                clean structured data\n */\nconst cleanStructuredData = filterObj((v) => isNotNilOrEmpty(v) && v !== '...');\n\n/**\n * Rename props named 'type' to '@type'\n * @param  {Object} obj any object\n * @return {Object}     new object\n */\nconst renameType = (obj) => {\n  return keys(obj).reduce((newObj, key) => {\n    newObj[key === 'type' ? '@type' : key] = obj[key];\n    return newObj;\n  }, {});\n};\n\nconst addContext = (structuredData) => {\n  // Does it really needs to be immutable?\n  structuredData['@context'] = 'http://schema.org/';\n  return structuredData;\n};\n\nconst getDate = pipe(\n  prop('frontmatter'),\n  prop('date')\n);\n\nconst addDatePublished = (markdownRemark) => {\n  return assocPath(['frontmatter', 'structuredData', 'datePublished'],\n    getDate(markdownRemark), markdownRemark);\n};\n\nconst getHeadline = pipe(\n  prop('frontmatter'),\n  prop('title')\n);\n\nconst addHeadline = (markdownRemark) => {\n  return assocPath(['frontmatter', 'structuredData', 'headline'],\n    getHeadline(markdownRemark), markdownRemark);\n};\n\nconst getArticleBody = pipe(\n  prop('html')\n);\n\nconst addArticleBody = (markdownRemark) => {\n  return assocPath(['frontmatter', 'structuredData', 'articleBody'],\n    getArticleBody(markdownRemark), markdownRemark);\n};\n\nconst addAuthor = (structuredData) => {\n  return structuredData.author\n    ? {\n      ...structuredData,\n      author: getAuthor(structuredData.author)\n    }\n    : structuredData;\n};\n\nconst getLangKey = pipe(\n  prop('frontmatter'),\n  prop('title')\n);\n\nconst addLanguage = (markdownRemark) => {\n  return assocPath(['fields', 'langKey'],\n    getLangKey(markdownRemark), markdownRemark);\n};\n\n/**\n *  Prepare structuredData from markdownRemark to google\n *  - get Structured Data from markdownRemark\n *  - remove empty fields\n *  - rename type to @type\n *  - parse to JSON\n *\n * @type {Object => String}\n */\nconst getStructuredData =\n  pipe(\n    addDatePublished,\n    addHeadline,\n    addArticleBody,\n    addLanguage,\n    prop('frontmatter'),\n    prop('structuredData'),\n    renameType,\n    addContext,\n    addAuthor,\n    cleanStructuredData,\n    JSON.stringify\n  );\n\nconst getStructuredDataForAuthor =\n  pipe(\n    renameType,\n    addContext,\n    cleanStructuredData,\n    JSON.stringify\n  );\n\nexport {\n  cleanStructuredData,\n  getStructuredData,\n  getStructuredDataForAuthor\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport H1 from './H1';\nimport { getAuthor } from '../data/authors';\nimport { getStructuredDataForAuthor } from '../structuredData';\nimport BigFirstLetter from './BigFirstLetter';\nimport styled from 'styled-components';\nimport { FormattedMessage } from 'react-intl';\nimport Helmet from 'react-helmet';\nimport Layout from '../components/layout';\n\nconst Header = styled.header`\n  padding: 0 0 ${({ theme }) => theme.scale(2)} 0;\n`;\n\nconst AboutPage = (props) => {\n  const author = getAuthor('hugomn');\n  author.description = props.i18n.descriptionForGoogle;\n  const structuredData = getStructuredDataForAuthor(author);\n\n  return (\n    <Layout location={props.location}>\n      <BigFirstLetter>\n        <script\n          type=\"application/ld+json\"\n          dangerouslySetInnerHTML={{ __html: structuredData }}\n        />\n        <FormattedMessage id=\"about\">\n          {(txt) => (\n            <Header>\n              <Helmet\n                title={txt}\n                meta={[{ name: 'description', content: txt }]}\n              />\n              <H1>\n                {txt}\n              </H1>\n            </Header>\n          )}\n        </FormattedMessage>\n        {props.i18n.description}\n      </BigFirstLetter>\n    </Layout>\n  );\n};\n\nAboutPage.propTypes = {\n  i18n: PropTypes.shape({\n    description: PropTypes.object.isRequired,\n    descriptionForGoogle: PropTypes.string.isRequired,\n  }).isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default AboutPage;\n"],"sourceRoot":""}