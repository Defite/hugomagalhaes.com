{"version":3,"sources":["webpack:///./src/templates/tag-page.js","webpack:///./src/components/Time.js","webpack:///./src/components/PostListItem.js","webpack:///./src/components/PostList.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_components_PostList__WEBPACK_IMPORTED_MODULE_4__","react_intl__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","_components_layout__WEBPACK_IMPORTED_MODULE_7__","Header","styled","header","withConfig","displayName","componentId","_ref","theme","scale","TagName","span","_ref2","AllTagsLink","Link","_ref3","_ref4","colors","yellow","_ref5","_ref6","white","TagRoute","_ref7","data","pageContext","location","posts","allMarkdownRemark","edges","map","p","node","allTagsLink","a","createElement","id","txt","to","langKey","title","tag","meta","name","content","values","nPosts","totalCount","propTypes","PropTypes","object","isRequired","Time","props","react__WEBPACK_IMPORTED_MODULE_1___default","Object","assign","dateTime","date","react_intl__WEBPACK_IMPORTED_MODULE_3__","value","Date","month","day","year","string","Li","li","blog","list","item","padding","margin","hover","backgroundColor","borderRadius","fontSize","lineHeight","CleanTime","time","color","P","PostListItem","post","react_default","key","fields","slug","PostListItem_Time","pubdate","frontmatter","excerpt","shape","Ul","ul","PostList","components_PostListItem","array"],"mappings":"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","file":"component---src-templates-tag-page-js-c917d0d7df66577b8cc2.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\nimport styled from 'styled-components';\nimport PostList from '../components/PostList';\nimport { FormattedMessage } from 'react-intl';\nimport Helmet from 'react-helmet';\nimport Layout from '../components/layout';\n\nconst Header = styled.header`\n  text-align: center;\n  font-size: ${({ theme }) => theme.scale(1)};\n`;\n\nconst TagName = styled.span`\n  font-size: ${({ theme }) => theme.scale(5)};\n  display: block;\n  text-align: center;\n`;\n\nconst AllTagsLink = styled(Link)`\n  text-align: center;\n  padding: ${({ theme }) => theme.scale(1)} 0;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.yellow};\n  font-size: ${({ theme }) => theme.scale(0)};\n  display: block;\n  position: relative;\n  text-decoration: underline;\n  transition: 0.3s;\n\n  &:hover {\n      color: ${({ theme }) => theme.colors.white};\n      transition: 0.3s;\n  }\n`;\n\nconst TagRoute = ({ data, pageContext, location }) => {\n  const posts = data.allMarkdownRemark.edges.map(p => p.node);\n\n  const allTagsLink = (\n    <FormattedMessage id=\"tags.allTagsLink\" >\n      {(txt) => (\n        <AllTagsLink\n          to={`/${pageContext.langKey}/tags/`}\n        >\n          {txt}\n        </AllTagsLink>\n      )}\n    </FormattedMessage>\n  );\n\n  return (\n    <Layout location={location}>\n      <section>\n        <Header>\n          <FormattedMessage id=\"tags\">\n            {(txt) => (\n              <Helmet\n                title={`${pageContext.tag} | ${txt}`}\n                meta={[{ name: 'description', content: txt }]}\n              />\n            )}\n          </FormattedMessage>\n          <FormattedMessage\n            id=\"tags.nPostsTaggedWith\"\n            values={{ nPosts: data.allMarkdownRemark.totalCount }}\n          />\n          <TagName>“{pageContext.tag}”</TagName>\n          {allTagsLink}\n        </Header>\n        <PostList\n          posts={posts}\n        />\n        <footer>\n          {allTagsLink}\n        </footer>\n      </section>\n    </Layout>\n  );\n};\n\nTagRoute.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object.isRequired,\n  pageContext: PropTypes.object\n};\n\nexport default TagRoute;\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String, $langKey: String) {\n  allMarkdownRemark(limit: 1000,\n    sort: {fields: [frontmatter___date], order: DESC},\n    filter: {\n      frontmatter: {\n        tags: {in: [$tag]},\n        draft: {ne: true}\n      },\n      fields: {\n        langKey: {eq: $langKey}\n      }\n    }) {\n    totalCount\n    edges {\n      node {\n        frontmatter{\n          title,\n          date\n        },\n        fields{\n          slug\n          langKey\n        },\n        excerpt\n      }\n    }\n  }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedDate } from 'react-intl';\n\nconst Time = (props) => {\n  return (\n    <time {...props} dateTime={props.date}>\n      <FormattedDate\n        value={new Date(props.date)}\n        month=\"long\"\n        day=\"numeric\"\n        year=\"numeric\"\n      />\n    </time>\n  );\n};\n\nTime.propTypes = {\n  date: PropTypes.string.isRequired\n};\n\nexport default Time;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from '../components/Link';\nimport styled from 'styled-components';\nimport CleanTime from '../components/Time';\n\nconst Li = styled.li`\n  padding: ${props => props.theme.blog.list.item.padding};\n  margin: ${props => props.theme.blog.list.item.margin};\n  transition: 0.3s;\n\n  &:hover {\n    background-color: ${props => props.theme.blog.list.item.hover.backgroundColor};\n    border-radius: ${props => props.theme.borderRadius};\n    transition: 0.3s;\n  }\n`;\n\nconst Header = styled.header`\n  padding: 0;\n  font-size: ${props => props.theme.blog.list.item.header.fontSize};\n  line-height: ${props => props.theme.blog.list.item.header.lineHeight};\n`;\n\nconst Time = styled(CleanTime)`\n  font-size: ${props => props.theme.blog.list.item.header.time.fontSize};\n  font-weight: bold;\n  color: ${props => props.theme.blog.list.item.header.time.color};\n  width: 100%;\n  display: block;\n  line-height: 1.2;\n`;\n\nconst P = styled.p`\n  font-size: ${props => props.theme.blog.list.item.p.fontSize};\n  margin: ${props => props.theme.blog.list.item.p.margin};\n  padding: ${props => props.theme.blog.list.item.p.padding};\n  line-height: ${props => props.theme.blog.list.item.p.lineHeight};\n`;\n\nconst PostListItem = ({ post }) => {\n  return (\n    <Li key={post.fields.slug}>\n      <Link to={post.fields.slug}>\n        <Header>\n          <Time\n            pubdate=\"pubdate\"\n            date={post.frontmatter.date}\n          />\n          {post.frontmatter.title}\n        </Header>\n        <P>{post.excerpt}</P>\n      </Link>\n    </Li>\n  );\n};\n\nPostListItem.propTypes = {\n  post: PropTypes.shape({\n    fields: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      langKey: PropTypes.string.isRequired\n    }),\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired\n    }),\n    excerpt: PropTypes.string.isRequired\n  })\n};\n\nexport default PostListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostListItem from './PostListItem';\nimport styled from 'styled-components';\n\nconst Ul = styled.ul`\n  list-style: none;\n  margin: ${props => props.theme.blog.list.ul.margin};\n  padding: ${props => props.theme.blog.list.ul.padding};\n`;\n\nconst PostList = (props) => {\n  return (\n    <nav>\n      <Ul>\n        {props.posts.map(post =>\n          <PostListItem key={post.fields.slug} post={post} />\n        )}\n      </Ul>\n    </nav>\n  );\n};\n\nPostList.propTypes = {\n  posts: PropTypes.array\n};\n\nexport default PostList;\n"],"sourceRoot":""}