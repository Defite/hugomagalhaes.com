{"version":3,"sources":["webpack:///./src/pages/about/index.pt.js","webpack:///./src/components/H1.js","webpack:///./src/components/BigFirstLetter.js","webpack:///./src/structuredData.js","webpack:///./src/components/AboutPage.js"],"names":["i18n","description","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","descriptionForGoogle","__webpack_exports__","props","_components_AboutPage__WEBPACK_IMPORTED_MODULE_2__","Object","assign","H1","__webpack_require__","styled","h1","withConfig","displayName","componentId","theme","fontSize","margin","padding","textAlign","BigFirstLetter","section","p","lineHeight","firstLetter","color","filterObj","curry","fn","obj","isNilOrEmpty","keys","reduce","newObj","key","value","cleanStructuredData","v","isNotNilOrEmpty","renameType","addContext","structuredData","getDate","pipe","prop","getHeadline","getArticleBody","getLangKey","getStructuredData","markdownRemark","assocPath","author","getAuthor","JSON","stringify","getStructuredDataForAuthor","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_H1__WEBPACK_IMPORTED_MODULE_2__","_data_authors__WEBPACK_IMPORTED_MODULE_3__","_structuredData__WEBPACK_IMPORTED_MODULE_4__","_BigFirstLetter__WEBPACK_IMPORTED_MODULE_5__","styled_components__WEBPACK_IMPORTED_MODULE_6__","react_intl__WEBPACK_IMPORTED_MODULE_7__","react_helmet__WEBPACK_IMPORTED_MODULE_8__","react_helmet__WEBPACK_IMPORTED_MODULE_8___default","Header","header","_ref","scale","AboutPage","type","dangerouslySetInnerHTML","__html","id","txt","title","meta","name","content","propTypes","PropTypes","shape","object","isRequired","string","data"],"mappings":"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","file":"component---src-pages-about-index-pt-js-fd4b56d22f82423e631d.js","sourcesContent":["import React from 'react';\nimport AboutMe from '../../components/AboutPage';\n\nconst i18n = {\n  description: (\n    <p>\n      Oi! Eu sou o Ângelo! Desenvolvedor Full-Stack desde 2007. <br />\n      Amo Linux e tecnologias Open Source tanto quanto amo minha filha e esposa. <br />\n      Atualmente uso React, Nodejs e Arch linux para desenvolvimento de Apps Web e Mobile.\n    </p>\n  ),\n  descriptionForGoogle: `\n    Oi! Eu sou o Ângelo! Desenvolvedor Full-Stack desde 2007.\n    Amo Linux e tecnologias Open Source tanto quanto amo minha filha e esposa.\n    Atualmente uso React, Nodejs e Arch linux para desenvolvimento de Apps Web e Mobile.\n  `\n};\n\nexport default (props) => <AboutMe i18n={i18n} {...props} />;\n\n","import styled from 'styled-components';\n\nconst H1 = styled.h1`\n  font-size: ${props => props.theme.h1.fontSize};\n  margin: ${props => props.theme.h1.margin};\n  padding: ${props => props.theme.h1.padding};\n  text-align: ${props => props.theme.h1.textAlign};\n`;\n\nexport default H1;\n","import styled from 'styled-components';\n\nconst BigFirstLetter = styled.section`\n  p{\n    font-size: ${props => props.theme.p.fontSize};\n    line-height: ${props => props.theme.p.lineHeight};\n  }\n\n  p:first-of-type::first-letter {\n      font-size: ${props => props.theme.p.firstLetter.fontSize};\n      color: ${props => props.theme.p.firstLetter.color};\n      float: left;\n      line-height: ${props => props.theme.p.firstLetter.lineHeight};\n      padding: ${props => props.theme.p.firstLetter.padding};\n      margin: ${props => props.theme.p.firstLetter.margin};\n  }\n`;\n\nexport default BigFirstLetter;\n","import { assocPath, curry, pipe, prop, keys } from 'ramda';\nimport { isNilOrEmpty, isNotNilOrEmpty } from 'ptz-fp';\nimport { getAuthor } from './data/authors';\n\nconst filterObj = curry((fn, obj) => {\n  if (isNilOrEmpty(obj)) return obj;\n\n  return keys(obj).reduce((newObj, key) => {\n    const value = obj[key];\n\n    if (typeof value === 'object') {\n      newObj[key] = filterObj(fn, obj[key]);\n    } else if (fn(value)) {\n      newObj[key] = obj[key];\n    }\n\n    return newObj;\n  }, {});\n});\n\n/**\n * Remove null fields and fields that has value equal to '...'\n * @param  {Object} structuredData google structured data\n * @return {Object}                clean structured data\n */\nconst cleanStructuredData = filterObj((v) => isNotNilOrEmpty(v) && v !== '...');\n\n/**\n * Rename props named 'type' to '@type'\n * @param  {Object} obj any object\n * @return {Object}     new object\n */\nconst renameType = (obj) => {\n  return keys(obj).reduce((newObj, key) => {\n    newObj[key === 'type' ? '@type' : key] = obj[key];\n    return newObj;\n  }, {});\n};\n\nconst addContext = (structuredData) => {\n  // Does it really needs to be immutable?\n  structuredData['@context'] = 'http://schema.org/';\n  return structuredData;\n};\n\nconst getDate = pipe(\n  prop('frontmatter'),\n  prop('date')\n);\n\nconst addDatePublished = (markdownRemark) => {\n  return assocPath(['frontmatter', 'structuredData', 'datePublished'],\n    getDate(markdownRemark), markdownRemark);\n};\n\nconst getHeadline = pipe(\n  prop('frontmatter'),\n  prop('title')\n);\n\nconst addHeadline = (markdownRemark) => {\n  return assocPath(['frontmatter', 'structuredData', 'headline'],\n    getHeadline(markdownRemark), markdownRemark);\n};\n\nconst getArticleBody = pipe(\n  prop('html')\n);\n\nconst addArticleBody = (markdownRemark) => {\n  return assocPath(['frontmatter', 'structuredData', 'articleBody'],\n    getArticleBody(markdownRemark), markdownRemark);\n};\n\nconst addAuthor = (structuredData) => {\n  return structuredData.author\n    ? {\n      ...structuredData,\n      author: getAuthor(structuredData.author)\n    }\n    : structuredData;\n};\n\nconst getLangKey = pipe(\n  prop('frontmatter'),\n  prop('title')\n);\n\nconst addLanguage = (markdownRemark) => {\n  return assocPath(['fields', 'langKey'],\n    getLangKey(markdownRemark), markdownRemark);\n};\n\n/**\n *  Prepare structuredData from markdownRemark to google\n *  - get Structured Data from markdownRemark\n *  - remove empty fields\n *  - rename type to @type\n *  - parse to JSON\n *\n * @type {Object => String}\n */\nconst getStructuredData =\n  pipe(\n    addDatePublished,\n    addHeadline,\n    addArticleBody,\n    addLanguage,\n    prop('frontmatter'),\n    prop('structuredData'),\n    renameType,\n    addContext,\n    addAuthor,\n    cleanStructuredData,\n    JSON.stringify\n  );\n\nconst getStructuredDataForAuthor =\n  pipe(\n    renameType,\n    addContext,\n    cleanStructuredData,\n    JSON.stringify\n  );\n\nexport {\n  cleanStructuredData,\n  getStructuredData,\n  getStructuredDataForAuthor\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport H1 from './H1';\nimport { getAuthor } from '../data/authors';\nimport { getStructuredDataForAuthor } from '../structuredData';\nimport BigFirstLetter from './BigFirstLetter';\nimport styled from 'styled-components';\nimport { FormattedMessage } from 'react-intl';\nimport Helmet from 'react-helmet';\n\nconst Header = styled.header`\n  padding: 0 0 ${({ theme }) => theme.scale(2)} 0;\n`;\n\nconst AboutPage = (props) => {\n  const author = getAuthor('hugomn');\n\n  author.description = props.i18n.descriptionForGoogle;\n\n  const structuredData = getStructuredDataForAuthor(author);\n\n  return (\n    <BigFirstLetter>\n      <script\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{ __html: structuredData }}\n      />\n      <FormattedMessage id=\"about\">\n        {(txt) => (\n          <Header>\n            <Helmet\n              title={txt}\n              meta={[{ name: 'description', content: txt }]}\n            />\n            <H1>\n              {txt}\n            </H1>\n          </Header>\n        )}\n      </FormattedMessage>\n      {props.i18n.description}\n    </BigFirstLetter>\n  );\n};\n\nAboutPage.propTypes = {\n  i18n: PropTypes.shape({\n    description: PropTypes.object.isRequired,\n    descriptionForGoogle: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.object.isRequired\n};\n\nexport default AboutPage;\n"],"sourceRoot":""}