{"version":3,"sources":["webpack:///./src/templates/tag-page.js","webpack:///./src/components/Time.js","webpack:///./src/components/PostListItem.js","webpack:///./src/components/PostList.js"],"names":["Header","styled","header","withConfig","displayName","componentId","_ref","theme","scale","TagName","span","_ref2","AllTagsLink","Link","_ref3","_ref4","colors","yellow","_ref5","_ref6","white","TagRoute","_ref7","data","pageContext","posts","allMarkdownRemark","edges","map","p","node","allTagsLink","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","react_intl__WEBPACK_IMPORTED_MODULE_5__","id","txt","to","langKey","_components_layout__WEBPACK_IMPORTED_MODULE_7__","location","props","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","title","tag","meta","name","content","values","nPosts","totalCount","_components_PostList__WEBPACK_IMPORTED_MODULE_4__","propTypes","PropTypes","object","pageQuery","Time","react__WEBPACK_IMPORTED_MODULE_1___default","Object","assign","dateTime","date","react_intl__WEBPACK_IMPORTED_MODULE_3__","value","Date","month","day","year","string","isRequired","Li","li","blog","list","item","padding","margin","hover","backgroundColor","borderRadius","fontSize","lineHeight","CleanTime","time","color","P","PostListItem","post","react_default","key","fields","slug","PostListItem_Time","pubdate","frontmatter","excerpt","shape","Ul","ul","PostList","components_PostListItem","array"],"mappings":"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","file":"component---src-templates-tag-page-js-bea7ec623dd6e2691e25.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\nimport styled from 'styled-components';\nimport PostList from '../components/PostList';\nimport { FormattedMessage } from 'react-intl';\nimport Helmet from 'react-helmet';\nimport Layout from '../components/layout';\n\nconst Header = styled.header`\n  text-align: center;\n  font-size: ${({ theme }) => theme.scale(1)};\n`;\n\nconst TagName = styled.span`\n  font-size: ${({ theme }) => theme.scale(5)};\n  display: block;\n  text-align: center;\n`;\n\nconst AllTagsLink = styled(Link)`\n  text-align: center;\n  padding: ${({ theme }) => theme.scale(1)} 0;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.yellow};\n  font-size: ${({ theme }) => theme.scale(0)};\n  display: block;\n  position: relative;\n  text-decoration: underline;\n  transition: 0.3s;\n\n  &:hover {\n      color: ${({ theme }) => theme.colors.white};\n      transition: 0.3s;\n  }\n`;\n\nconst TagRoute = ({ data, pageContext }) => {\n  const posts = data.allMarkdownRemark.edges.map(p => p.node);\n\n  const allTagsLink = (\n    <FormattedMessage id=\"tags.allTagsLink\" >\n      {(txt) => (\n        <AllTagsLink\n          to={`/${pageContext.langKey}/tags/`}\n        >\n          {txt}\n        </AllTagsLink>\n      )}\n    </FormattedMessage>\n  );\n\n  return (\n    <Layout location={this.props.location}>\n      <section>\n        <Header>\n          <FormattedMessage id=\"tags\">\n            {(txt) => (\n              <Helmet\n                title={`${pageContext.tag} | ${txt}`}\n                meta={[{ name: 'description', content: txt }]}\n              />\n            )}\n          </FormattedMessage>\n          <FormattedMessage\n            id=\"tags.nPostsTaggedWith\"\n            values={{ nPosts: data.allMarkdownRemark.totalCount }}\n          />\n          <TagName>“{pageContext.tag}”</TagName>\n          {allTagsLink}\n        </Header>\n        <PostList\n          posts={posts}\n        />\n        <footer>\n          {allTagsLink}\n        </footer>\n      </section>\n    </Layout>\n  );\n};\n\nTagRoute.propTypes = {\n  data: PropTypes.object,\n  pageContext: PropTypes.object\n};\n\nexport default TagRoute;\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String, $langKey: String) {\n  allMarkdownRemark(limit: 1000,\n    sort: {fields: [frontmatter___date], order: DESC},\n    filter: {\n      frontmatter: {\n        tags: {in: [$tag]},\n        draft: {ne: true}\n      },\n      fields: {\n        langKey: {eq: $langKey}\n      }\n    }) {\n    totalCount\n    edges {\n      node {\n        frontmatter{\n          title,\n          date\n        },\n        fields{\n          slug\n          langKey\n        },\n        excerpt\n      }\n    }\n  }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedDate } from 'react-intl';\n\nconst Time = (props) => {\n  return (\n    <time {...props} dateTime={props.date}>\n      <FormattedDate\n        value={new Date(props.date)}\n        month=\"long\"\n        day=\"numeric\"\n        year=\"numeric\"\n      />\n    </time>\n  );\n};\n\nTime.propTypes = {\n  date: PropTypes.string.isRequired\n};\n\nexport default Time;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from '../components/Link';\nimport styled from 'styled-components';\nimport CleanTime from '../components/Time';\n\nconst Li = styled.li`\n  padding: ${props => props.theme.blog.list.item.padding};\n  margin: ${props => props.theme.blog.list.item.margin};\n  transition: 0.3s;\n\n  &:hover {\n    background-color: ${props => props.theme.blog.list.item.hover.backgroundColor};\n    border-radius: ${props => props.theme.borderRadius};\n    transition: 0.3s;\n  }\n`;\n\nconst Header = styled.header`\n  padding: 0;\n  font-size: ${props => props.theme.blog.list.item.header.fontSize};\n  line-height: ${props => props.theme.blog.list.item.header.lineHeight};\n`;\n\nconst Time = styled(CleanTime)`\n  font-size: ${props => props.theme.blog.list.item.header.time.fontSize};\n  font-weight: bold;\n  color: ${props => props.theme.blog.list.item.header.time.color};\n  width: 100%;\n  display: block;\n  line-height: 1.2;\n`;\n\nconst P = styled.p`\n  font-size: ${props => props.theme.blog.list.item.p.fontSize};\n  margin: ${props => props.theme.blog.list.item.p.margin};\n  padding: ${props => props.theme.blog.list.item.p.padding};\n  line-height: ${props => props.theme.blog.list.item.p.lineHeight};\n`;\n\nconst PostListItem = ({ post }) => {\n  return (\n    <Li key={post.fields.slug}>\n      <Link to={post.fields.slug}>\n        <Header>\n          <Time\n            pubdate=\"pubdate\"\n            date={post.frontmatter.date}\n          />\n          {post.frontmatter.title}\n        </Header>\n        <P>{post.excerpt}</P>\n      </Link>\n    </Li>\n  );\n};\n\nPostListItem.propTypes = {\n  post: PropTypes.shape({\n    fields: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      langKey: PropTypes.string.isRequired\n    }),\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired\n    }),\n    excerpt: PropTypes.string.isRequired\n  })\n};\n\nexport default PostListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostListItem from './PostListItem';\nimport styled from 'styled-components';\n\nconst Ul = styled.ul`\n  list-style: none;\n  margin: ${props => props.theme.blog.list.ul.margin};\n  padding: ${props => props.theme.blog.list.ul.padding};\n`;\n\nconst PostList = (props) => {\n  return (\n    <nav>\n      <Ul>\n        {props.posts.map(post =>\n          <PostListItem key={post.fields.slug} post={post} />\n        )}\n      </Ul>\n    </nav>\n  );\n};\n\nPostList.propTypes = {\n  posts: PropTypes.array\n};\n\nexport default PostList;\n"],"sourceRoot":""}