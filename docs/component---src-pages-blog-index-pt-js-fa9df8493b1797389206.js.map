{"version":3,"sources":["webpack:///./src/pages/blog/index.pt.js","webpack:///./src/components/Time.js","webpack:///./src/components/Post.js","webpack:///./src/components/PostList.js","webpack:///./src/components/H1.js","webpack:///./src/components/pages/Blog.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_pages_Blog__WEBPACK_IMPORTED_MODULE_1__","props","a","createElement","Time","react__WEBPACK_IMPORTED_MODULE_1___default","Object","assign","dateTime","date","react_intl__WEBPACK_IMPORTED_MODULE_3__","value","Date","month","day","year","propTypes","PropTypes","string","isRequired","GridContainer","styled","Grid","withConfig","displayName","componentId","theme","blog","list","item","border","Body","Cell","padding","Footer","footer","fontFamily","fontSize","lineHeight","Title","h2","title","margin","TitleLink","Link","color","hover","Text","p","text","ProfilePicture","Gravatar","Author","span","time","Post","_ref","post","author","react_default","columns","rows","styled_css_grid_esm","to","fields","slug","gatsby_image_default","sizes","frontmatter","image","childImageSharp","excerpt","middle","email","alt","name","width","height","Post_Date","pubdate","center","fillRule","shape","langKey","object","PostList","ul","gap","alignContent","posts","map","key","components_Post","array","H1","h1","textAlign","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_PostList__WEBPACK_IMPORTED_MODULE_2__","_H1__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","react_intl__WEBPACK_IMPORTED_MODULE_5__","_layout__WEBPACK_IMPORTED_MODULE_6__","Blog","data","site","siteMetadata","location","className","id","txt","meta","content","allMarkdownRemark","edges","node"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAIeE,EAAA,iBAACO,GAAD,OAAWH,EAAAI,EAAAC,cAACH,EAAA,EAASC,IAE7B,IAAML,EAAS,kGCFhBQ,EAAO,SAACH,GACZ,OACEI,EAAAH,EAAAC,cAAA,OAAAG,OAAAC,OAAA,GAAUN,EAAV,CAAiBO,SAAUP,EAAMQ,OAC/BJ,EAAAH,EAAAC,cAACO,EAAA,EAAD,CACEC,MAAO,IAAIC,KAAKX,EAAMQ,MACtBI,MAAM,OACNC,IAAI,UACJC,KAAK,cAMbX,EAAKY,UAAY,CACfP,KAAMQ,IAAUC,OAAOC,YAGVf,6JCZTgB,EAAgBC,YAAOC,KAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGJ,CAAH,kDACP,SAAApB,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKC,SAK1CC,EAAOV,YAAOW,KAAVT,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGJ,CAAH,iBACG,SAAApB,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKI,UAG3CC,EAASb,YAAOW,KAAVT,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGJ,CAAH,+DACK,SAAApB,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKM,OAAOC,YAC7C,SAAAnC,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKM,OAAOE,UAC7C,SAAApC,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKM,OAAOF,SACvC,SAAAhC,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKM,OAAOG,aAGtDC,EAAQlB,IAAOmB,GAAVjB,WAAA,CAAAC,YAAA,cAAAC,YAAA,gBAAGJ,CAAH,wEAEM,SAAApB,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKY,MAAML,YAC5C,SAAAnC,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKY,MAAMJ,UACxC,SAAApC,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKY,MAAMH,YAC/C,SAAArC,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKY,MAAMC,SAGhDC,EAAYtB,YAAOuB,KAAVrB,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,kCACJ,SAAApB,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKY,MAAMI,OAExC,SAAA5C,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKY,MAAMK,MAAMD,QAIvDE,EAAO1B,IAAO2B,EAAVzB,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGJ,CAAH,oFACO,SAAApB,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKoB,KAAKb,YAC3C,SAAAnC,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKoB,KAAKZ,UAC7C,SAAApC,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKoB,KAAKJ,OACxC,SAAA5C,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKoB,KAAKP,QACxC,SAAAzC,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKoB,KAAKhB,SACrC,SAAAhC,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKoB,KAAKX,aAGpDY,EAAiB7B,YAAO8B,KAAV5B,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,sCAKd+B,EAAS/B,IAAOgC,KAAV9B,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGJ,CAAH,MAINT,EAAOS,YAAOjB,KAAVmB,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGJ,CAAH,6BACC,SAAApB,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAKC,KAAKM,OAAOmB,KAAKT,QAIrDU,EAAO,SAAAC,GAAsB,IAAnBC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,OACpB,OACEC,EAAAzD,EAAAC,cAACiB,EAAD,CAAewC,QAAS,EAAGC,KAAM,iBAC/BF,EAAAzD,EAAAC,cAAC2D,EAAA,EAAD,KACEH,EAAAzD,EAAAC,cAACyC,EAAA,EAAD,CAAMmB,GAAIN,EAAKO,OAAOC,MACpBN,EAAAzD,EAAAC,cAAC+D,EAAAhE,EAAD,CAAKiE,MAAOV,EAAKW,YAAYC,MAAMC,gBAAgBH,UAGvDR,EAAAzD,EAAAC,cAAC4B,EAAD,KACE4B,EAAAzD,EAAAC,cAACoC,EAAD,KACEoB,EAAAzD,EAAAC,cAACwC,EAAD,CAAWoB,GAAIN,EAAKO,OAAOC,MACxBR,EAAKW,YAAY3B,QAGtBkB,EAAAzD,EAAAC,cAAC4C,EAAD,KAAOU,EAAKc,UAEdZ,EAAAzD,EAAAC,cAAC+B,EAAD,KACEyB,EAAAzD,EAAAC,cAAC2D,EAAA,EAAD,CAAMF,QAAS,iBACbD,EAAAzD,EAAAC,cAAC2D,EAAA,EAAD,CAAMU,QAAM,GACVb,EAAAzD,EAAAC,cAAC+C,EAAD,CAAgBuB,MAAOf,EAAOe,MAAOC,IAAKhB,EAAOiB,KAAMC,MAAO,GAAIC,OAAQ,MAE5ElB,EAAAzD,EAAAC,cAAC2D,EAAA,EAAD,CAAMU,QAAM,GACVb,EAAAzD,EAAAC,cAACiD,EAAD,KAAUM,EAAOiB,MACjBhB,EAAAzD,EAAAC,cAAC2E,EAAD,CACEC,QAAQ,UACRtE,KAAMgD,EAAKW,YAAY3D,QAG3BkD,EAAAzD,EAAAC,cAAC2D,EAAA,EAAD,CAAMkB,QAAM,EAACR,QAAM,GACjBb,EAAAzD,EAAAC,cAACyC,EAAA,EAAD,CAAMmB,GAAIN,EAAKO,OAAOC,MACpBN,EAAAzD,EAAAC,cAAA,OAAKyE,MAAM,KAAKC,OAAO,MAAKlB,EAAAzD,EAAAC,cAAA,QAAMR,EAAE,wQAAwQsF,SAAS,mBASnU1B,EAAKvC,UAAY,CACfyC,KAAMxC,IAAUiE,MAAM,CACpBlB,OAAQ/C,IAAUiE,MAAM,CACtBjB,KAAMhD,IAAUC,OAAOC,WACvBgE,QAASlE,IAAUC,OAAOC,aAE5BiD,YAAanD,IAAUiE,MAAM,CAC3BzC,MAAOxB,IAAUC,OAAOC,WACxBV,KAAMQ,IAAUC,OAAOC,aAEzBoD,QAAStD,IAAUC,OAAOC,aAE5BuC,OAAQzC,IAAUmE,OAAOjE,YAGZoC,QC1GT8B,GANKhE,IAAOiE,GAAV/D,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGJ,CAAH,4CAEI,SAAApB,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAK0D,GAAG5C,QACjC,SAAAzC,GAAK,OAAIA,EAAMyB,MAAMC,KAAKC,KAAK0D,GAAGrD,UAG9B,SAAChC,GAChB,OACE0D,EAAAzD,EAAAC,cAAA,WAMEwD,EAAAzD,EAAAC,cAAC2D,EAAA,EAAD,CAAMF,QAAQ,qCAAqC2B,IAAI,OAAOC,aAAa,WACxEvF,EAAMwF,MAAMC,IAAI,SAAAjC,GAAI,OACnBE,EAAAzD,EAAAC,cAAC2D,EAAA,EAAD,CAAM6B,IAAKlC,EAAKO,OAAOC,MACrBN,EAAAzD,EAAAC,cAACyF,EAAD,CAAMnC,KAAMA,EAAMC,OAAQzD,EAAMyD,gBAQ5C2B,EAASrE,UAAY,CACnByE,MAAOxE,IAAU4E,MAAM1E,WACvBuC,OAAQzC,IAAUmE,OAAOjE,YAGZkE,wCCpCf,IAEMS,EAFNtG,EAAA,KAEW6B,EAAO0E,GAAVxE,WAAA,CAAAC,YAAA,KAAAC,YAAA,YAAGJ,CAAH,yDACO,SAAApB,GAAK,OAAIA,EAAMyB,MAAMqE,GAAG1D,UAC3B,SAAApC,GAAK,OAAIA,EAAMyB,MAAMqE,GAAGrD,QACvB,SAAAzC,GAAK,OAAIA,EAAMyB,MAAMqE,GAAG9D,SACrB,SAAAhC,GAAK,OAAIA,EAAMyB,MAAMqE,GAAGC,YAGzBF,wCCTf,IAAAjG,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAoG,EAAAzG,EAAA,GAAA0G,EAAA1G,EAAAO,EAAAkG,GAAAE,EAAA3G,EAAA,KAAA4G,EAAA5G,EAAA,KAAA6G,EAAA7G,EAAA,KAAA8G,EAAA9G,EAAAO,EAAAsG,GAAAE,EAAA/G,EAAA,KAAAgH,EAAAhH,EAAA,KAQMiH,EAAO,SAACxG,GAAU,IACdyD,EAAWzD,EAAMyG,KAAKC,KAAKC,aAA3BlD,OACR,OACE5D,EAAAI,EAAAC,cAACqG,EAAA,EAAD,CAAQK,SAAU5G,EAAM4G,UACtB/G,EAAAI,EAAAC,cAAA,WAAS2G,UAAU,SACjBhH,EAAAI,EAAAC,cAACoG,EAAA,EAAD,CAAkBQ,GAAG,SAClB,SAACC,GAAD,OACClH,EAAAI,EAAAC,cAAA,cACEL,EAAAI,EAAAC,cAACmG,EAAApG,EAAD,CACEuC,MAAOuE,EACPC,KAAM,CAAC,CAAEtC,KAAM,cAAeuC,QAASF,MAEzClH,EAAAI,EAAAC,cAACiG,EAAA,EAAD,KACGY,MAKTlH,EAAAI,EAAAC,cAACgG,EAAA,EAAD,CACEV,MAAOxF,EAAMyG,KAAKS,kBAAkBC,MAAM1B,IAAI,SAAA1C,GAAC,OAAIA,EAAEqE,OAAO3D,OAAQA,OAO9E+C,EAAKzF,UAAY,CACf0F,KAAMzF,IAAUmE,OAAOjE,WACvB0F,SAAU5F,IAAUmE,OAAOjE,YAGdsF","file":"component---src-pages-blog-index-pt-js-fa9df8493b1797389206.js","sourcesContent":["import React from 'react';\nimport Blog from '../../components/pages/Blog';\nimport { graphql } from 'gatsby';\n\nexport default (props) => <Blog {...props} />;\n\nexport const pageQuery = graphql`\n  query BlogPtQuery {\n    site {\n      siteMetadata {\n        author {\n          name\n          homeCity\n          email\n          defaultLink\n        }\n      }\n    },\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { draft: { ne: true } },\n        fields: { langKey: { regex: \"/(pt|any)/\" } }\n      },\n    ) {\n      edges {\n        node{\n          frontmatter{\n            title,\n            tags,\n            date,\n            image {\n              childImageSharp{\n                  sizes(maxWidth: 750) {\n                      ...GatsbyImageSharpSizes\n                  }\n              }\n            }\n          },\n          fields{\n            slug,\n            langKey,\n            tagSlugs{\n              tag,\n              link\n            }\n          },\n          excerpt\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedDate } from 'react-intl';\n\nconst Time = (props) => {\n  return (\n    <time {...props} dateTime={props.date}>\n      <FormattedDate\n        value={new Date(props.date)}\n        month=\"long\"\n        day=\"numeric\"\n        year=\"numeric\"\n      />\n    </time>\n  );\n};\n\nTime.propTypes = {\n  date: PropTypes.string.isRequired\n};\n\nexport default Time;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from '../components/Link';\nimport styled from 'styled-components';\nimport Time from '../components/Time';\nimport { Grid, Cell } from 'styled-css-grid';\nimport Gravatar from 'react-gravatar';\nimport Img from 'gatsby-image';\n\nconst GridContainer = styled(Grid)`\n  border: ${props => props.theme.blog.list.item.border};\n  border-radius: 0.25rem;\n  height: 100%;\n`;\n\nconst Body = styled(Cell)`\n  padding: ${props => props.theme.blog.list.item.padding};\n`;\n\nconst Footer = styled(Cell)`\n  font-family: ${props => props.theme.blog.list.item.footer.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.footer.fontSize};\n  padding: ${props => props.theme.blog.list.item.footer.padding};\n  line-height: ${props => props.theme.blog.list.item.footer.lineHeight};\n`;\n\nconst Title = styled.h2`\n  padding: 0;\n  font-family: ${props => props.theme.blog.list.item.title.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.title.fontSize};\n  line-height: ${props => props.theme.blog.list.item.title.lineHeight};\n  margin: ${props => props.theme.blog.list.item.title.margin};\n`;\n\nconst TitleLink = styled(Link)`\n  color: ${props => props.theme.blog.list.item.title.color};\n  &:hover {\n    color: ${props => props.theme.blog.list.item.title.hover.color};\n  }\n`;\n\nconst Text = styled.p`\n  font-family: ${props => props.theme.blog.list.item.text.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.text.fontSize};\n  color: ${props => props.theme.blog.list.item.text.color};\n  margin: ${props => props.theme.blog.list.item.text.margin};\n  padding: ${props => props.theme.blog.list.item.text.padding};\n  line-height: ${props => props.theme.blog.list.item.text.lineHeight};\n`;\n\nconst ProfilePicture = styled(Gravatar)`\n  display: block;\n  border-radius: 50%;\n`;\n\nconst Author = styled.span`\n\n`;\n\nconst Date = styled(Time)`\n  color: ${props => props.theme.blog.list.item.footer.time.color};\n  display: block;\n`;\n\nconst Post = ({ post, author }) => {\n  return (\n    <GridContainer columns={1} rows={'auto 1fr auto'}>\n      <Cell>\n        <Link to={post.fields.slug}>\n          <Img sizes={post.frontmatter.image.childImageSharp.sizes} />\n        </Link>\n      </Cell>\n      <Body>\n        <Title>\n          <TitleLink to={post.fields.slug}>\n            {post.frontmatter.title}\n          </TitleLink>\n        </Title>\n        <Text>{post.excerpt}</Text>\n      </Body>\n      <Footer>\n        <Grid columns={'50px 1fr 25px'}>\n          <Cell middle>\n            <ProfilePicture email={author.email} alt={author.name} width={40} height={40} />\n          </Cell>\n          <Cell middle>\n            <Author>{ author.name }</Author>\n            <Date\n              pubdate=\"pubdate\"\n              date={post.frontmatter.date}\n            />\n          </Cell>\n          <Cell center middle>\n            <Link to={post.fields.slug}>\n              <svg width=\"25\" height=\"25\"><path d=\"M19 6c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v14.66h.012c.01.103.045.204.12.285a.5.5 0 0 0 .706.03L12.5 16.85l5.662 4.126a.508.508 0 0 0 .708-.03.5.5 0 0 0 .118-.285H19V6zm-6.838 9.97L7 19.636V6c0-.55.45-1 1-1h9c.55 0 1 .45 1 1v13.637l-5.162-3.668a.49.49 0 0 0-.676 0z\" fillRule=\"evenodd\" /></svg>\n            </Link>\n          </Cell>\n        </Grid>\n      </Footer>\n    </GridContainer>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    fields: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      langKey: PropTypes.string.isRequired\n    }),\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired\n    }),\n    excerpt: PropTypes.string.isRequired\n  }),\n  author: PropTypes.object.isRequired\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\n\nconst Ul = styled.ul`\n  list-style: none;\n  margin: ${props => props.theme.blog.list.ul.margin};\n  padding: ${props => props.theme.blog.list.ul.padding};\n`;\n\nconst PostList = (props) => {\n  return (\n    <nav>\n      {/* <Ul>\n        {props.posts.map(post =>\n          <Post key={post.fields.slug} post={post} />\n        )}\n      </Ul> */}\n      <Grid columns=\"repeat(auto-fit,minmax(360px,1fr))\" gap=\"30px\" alignContent=\"stretch\">\n        {props.posts.map(post =>\n          <Cell key={post.fields.slug}>\n            <Post post={post} author={props.author} />\n          </Cell>\n        )}\n      </Grid>\n    </nav>\n  );\n};\n\nPostList.propTypes = {\n  posts: PropTypes.array.isRequired,\n  author: PropTypes.object.isRequired\n};\n\nexport default PostList;\n","import styled from 'styled-components';\n\nconst H1 = styled.h1`\n  font-size: ${props => props.theme.h1.fontSize};\n  margin: ${props => props.theme.h1.margin};\n  padding: ${props => props.theme.h1.padding};\n  text-align: ${props => props.theme.h1.textAlign};\n`;\n\nexport default H1;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostList from '../PostList';\nimport H1 from '../H1';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport Layout from '../layout';\n\nconst Blog = (props) => {\n  const { author } = props.data.site.siteMetadata;\n  return (\n    <Layout location={props.location}>\n      <section className=\"posts\">\n        <FormattedMessage id=\"posts\">\n          {(txt) => (\n            <header>\n              <Helmet\n                title={txt}\n                meta={[{ name: 'description', content: txt }]}\n              />\n              <H1>\n                {txt}\n              </H1>\n            </header>\n          )}\n        </FormattedMessage>\n        <PostList\n          posts={props.data.allMarkdownRemark.edges.map(p => p.node)} author={author}\n        />\n      </section>\n    </Layout>\n  );\n};\n\nBlog.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default Blog;\n"],"sourceRoot":""}