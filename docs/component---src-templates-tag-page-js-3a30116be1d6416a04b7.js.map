{"version":3,"sources":["webpack:///./src/templates/tag-page.js","webpack:///./src/components/Time.js","webpack:///./src/components/Post.js","webpack:///./src/components/PostList.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_components_PostList__WEBPACK_IMPORTED_MODULE_4__","react_intl__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","_components_layout__WEBPACK_IMPORTED_MODULE_7__","Header","styled","header","withConfig","displayName","componentId","_ref","theme","scale","TagName","span","_ref2","AllTagsLink","Link","_ref3","_ref4","colors","yellow","_ref5","_ref6","white","TagRoute","_ref7","data","pageContext","location","posts","allMarkdownRemark","edges","map","p","node","author","site","siteMetadata","allTagsLink","a","createElement","id","txt","to","langKey","title","tag","meta","name","content","values","nPosts","totalCount","propTypes","PropTypes","object","isRequired","Time","props","react__WEBPACK_IMPORTED_MODULE_1___default","Object","assign","dateTime","date","react_intl__WEBPACK_IMPORTED_MODULE_3__","value","Date","month","day","year","string","GridContainer","Grid","blog","list","item","border","Body","Cell","padding","Footer","footer","fontFamily","fontSize","lineHeight","Title","h2","margin","TitleLink","color","hover","Text","text","ProfilePicture","Gravatar","Author","time","Post","post","react_default","columns","rows","styled_css_grid_esm","fields","slug","gatsby_image_default","sizes","frontmatter","image","childImageSharp","excerpt","middle","email","alt","width","height","Post_Date","pubdate","center","fillRule","shape","PostList","ul","gap","alignContent","key","components_Post","array"],"mappings":"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","file":"component---src-templates-tag-page-js-3a30116be1d6416a04b7.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\nimport styled from 'styled-components';\nimport PostList from '../components/PostList';\nimport { FormattedMessage } from 'react-intl';\nimport Helmet from 'react-helmet';\nimport Layout from '../components/layout';\n\nconst Header = styled.header`\n  text-align: center;\n  font-size: ${({ theme }) => theme.scale(1)};\n`;\n\nconst TagName = styled.span`\n  font-size: ${({ theme }) => theme.scale(5)};\n  display: block;\n  text-align: center;\n`;\n\nconst AllTagsLink = styled(Link)`\n  text-align: center;\n  padding: ${({ theme }) => theme.scale(1)} 0;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.yellow};\n  font-size: ${({ theme }) => theme.scale(0)};\n  display: block;\n  position: relative;\n  text-decoration: underline;\n  transition: 0.3s;\n\n  &:hover {\n      color: ${({ theme }) => theme.colors.white};\n      transition: 0.3s;\n  }\n`;\n\nconst TagRoute = ({ data, pageContext, location }) => {\n  const posts = data.allMarkdownRemark.edges.map(p => p.node);\n  const { author } = data.site.siteMetadata;\n\n  const allTagsLink = (\n    <FormattedMessage id=\"tags.allTagsLink\" >\n      {(txt) => (\n        <AllTagsLink\n          to={`/${pageContext.langKey}/tags/`}\n        >\n          {txt}\n        </AllTagsLink>\n      )}\n    </FormattedMessage>\n  );\n\n  return (\n    <Layout location={location}>\n      <section>\n        <Header>\n          <FormattedMessage id=\"tags\">\n            {(txt) => (\n              <Helmet\n                title={`${pageContext.tag} | ${txt}`}\n                meta={[{ name: 'description', content: txt }]}\n              />\n            )}\n          </FormattedMessage>\n          <FormattedMessage\n            id=\"tags.nPostsTaggedWith\"\n            values={{ nPosts: data.allMarkdownRemark.totalCount }}\n          />\n          <TagName>“{pageContext.tag}”</TagName>\n          {allTagsLink}\n        </Header>\n        <PostList\n          posts={posts} author={author}\n        />\n        <footer>\n          {allTagsLink}\n        </footer>\n      </section>\n    </Layout>\n  );\n};\n\nTagRoute.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object.isRequired,\n  pageContext: PropTypes.object\n};\n\nexport default TagRoute;\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String, $langKey: String) {\n  site {\n    siteMetadata {\n      author {\n        name\n        homeCity\n        email\n        defaultLink\n      }\n    }\n  },\n  allMarkdownRemark(limit: 1000,\n    sort: {fields: [frontmatter___date], order: DESC},\n    filter: {\n      frontmatter: {\n        tags: {in: [$tag]},\n        draft: {ne: true}\n      },\n      fields: {\n        langKey: {eq: $langKey}\n      }\n    }) {\n    totalCount\n    edges {\n      node {\n        frontmatter{\n          title,\n          date,\n          image {\n            childImageSharp{\n                sizes(maxWidth: 750) {\n                    ...GatsbyImageSharpSizes\n                }\n            }\n          }\n        },\n        fields{\n          slug\n          langKey\n        },\n        excerpt\n      }\n    }\n  }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedDate } from 'react-intl';\n\nconst Time = (props) => {\n  return (\n    <time {...props} dateTime={props.date}>\n      <FormattedDate\n        value={new Date(props.date)}\n        month=\"long\"\n        day=\"numeric\"\n        year=\"numeric\"\n      />\n    </time>\n  );\n};\n\nTime.propTypes = {\n  date: PropTypes.string.isRequired\n};\n\nexport default Time;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from '../components/Link';\nimport styled from 'styled-components';\nimport Time from '../components/Time';\nimport { Grid, Cell } from 'styled-css-grid';\nimport Gravatar from 'react-gravatar';\nimport Img from 'gatsby-image';\n\nconst GridContainer = styled(Grid)`\n  border: ${props => props.theme.blog.list.item.border};\n  border-radius: 0.25rem;\n  height: 100%;\n`;\n\nconst Body = styled(Cell)`\n  padding: ${props => props.theme.blog.list.item.padding};\n`;\n\nconst Footer = styled(Cell)`\n  font-family: ${props => props.theme.blog.list.item.footer.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.footer.fontSize};\n  padding: ${props => props.theme.blog.list.item.footer.padding};\n  line-height: ${props => props.theme.blog.list.item.footer.lineHeight};\n`;\n\nconst Title = styled.h2`\n  padding: 0;\n  font-family: ${props => props.theme.blog.list.item.title.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.title.fontSize};\n  line-height: ${props => props.theme.blog.list.item.title.lineHeight};\n  margin: ${props => props.theme.blog.list.item.title.margin};\n`;\n\nconst TitleLink = styled(Link)`\n  color: ${props => props.theme.blog.list.item.title.color};\n  &:hover {\n    color: ${props => props.theme.blog.list.item.title.hover.color};\n  }\n`;\n\nconst Text = styled.p`\n  font-family: ${props => props.theme.blog.list.item.text.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.text.fontSize};\n  color: ${props => props.theme.blog.list.item.text.color};\n  margin: ${props => props.theme.blog.list.item.text.margin};\n  padding: ${props => props.theme.blog.list.item.text.padding};\n  line-height: ${props => props.theme.blog.list.item.text.lineHeight};\n`;\n\nconst ProfilePicture = styled(Gravatar)`\n  display: block;\n  border-radius: 50%;\n`;\n\nconst Author = styled.span`\n\n`;\n\nconst Date = styled(Time)`\n  color: ${props => props.theme.blog.list.item.footer.time.color};\n  display: block;\n`;\n\nconst Post = ({ post, author }) => {\n  return (\n    <GridContainer columns={1} rows={'auto 1fr auto'}>\n      <Cell>\n        <Link to={post.fields.slug}>\n          <Img sizes={post.frontmatter.image.childImageSharp.sizes} />\n        </Link>\n      </Cell>\n      <Body>\n        <Title>\n          <TitleLink to={post.fields.slug}>\n            {post.frontmatter.title}\n          </TitleLink>\n        </Title>\n        <Text>{post.excerpt}</Text>\n      </Body>\n      <Footer>\n        <Grid columns={'50px 1fr 25px'}>\n          <Cell middle>\n            <ProfilePicture email={author.email} alt={author.name} width={40} height={40} />\n          </Cell>\n          <Cell middle>\n            <Author>{ author.name }</Author>\n            <Date\n              pubdate=\"pubdate\"\n              date={post.frontmatter.date}\n            />\n          </Cell>\n          <Cell center middle>\n            <Link to={post.fields.slug}>\n              <svg width=\"25\" height=\"25\"><path d=\"M19 6c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v14.66h.012c.01.103.045.204.12.285a.5.5 0 0 0 .706.03L12.5 16.85l5.662 4.126a.508.508 0 0 0 .708-.03.5.5 0 0 0 .118-.285H19V6zm-6.838 9.97L7 19.636V6c0-.55.45-1 1-1h9c.55 0 1 .45 1 1v13.637l-5.162-3.668a.49.49 0 0 0-.676 0z\" fillRule=\"evenodd\" /></svg>\n            </Link>\n          </Cell>\n        </Grid>\n      </Footer>\n    </GridContainer>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    fields: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      langKey: PropTypes.string.isRequired\n    }),\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired\n    }),\n    excerpt: PropTypes.string.isRequired\n  }),\n  author: PropTypes.object.isRequired\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\n\nconst Ul = styled.ul`\n  list-style: none;\n  margin: ${props => props.theme.blog.list.ul.margin};\n  padding: ${props => props.theme.blog.list.ul.padding};\n`;\n\nconst PostList = (props) => {\n  return (\n    <nav>\n      {/* <Ul>\n        {props.posts.map(post =>\n          <Post key={post.fields.slug} post={post} />\n        )}\n      </Ul> */}\n      <Grid columns=\"repeat(auto-fit,minmax(360px,1fr))\" gap=\"30px\" alignContent=\"stretch\">\n        {props.posts.map(post =>\n          <Cell key={post.fields.slug}>\n            <Post post={post} author={props.author} />\n          </Cell>\n        )}\n      </Grid>\n    </nav>\n  );\n};\n\nPostList.propTypes = {\n  posts: PropTypes.array.isRequired,\n  author: PropTypes.object.isRequired\n};\n\nexport default PostList;\n"],"sourceRoot":""}