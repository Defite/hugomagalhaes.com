{"version":3,"sources":["webpack:///./src/templates/tag-page.js","webpack:///./src/components/Time.js","webpack:///./src/components/PostAuthor.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/PostCard.js","webpack:///./src/components/PostCardList.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_components_PostCardList__WEBPACK_IMPORTED_MODULE_4__","react_intl__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","_components_layout__WEBPACK_IMPORTED_MODULE_7__","Header","styled","header","withConfig","displayName","componentId","_ref","theme","scale","TagName","span","_ref2","AllTagsLink","Link","_ref3","_ref4","colors","green","_ref5","_ref6","white","TagRoute","_ref7","data","pageContext","location","posts","allMarkdownRemark","edges","map","p","node","author","site","siteMetadata","allTagsLink","a","createElement","id","txt","to","langKey","title","tag","meta","name","content","values","nPosts","totalCount","propTypes","PropTypes","object","isRequired","Time","props","react_default","Object","assign","dateTime","date","index_es","value","Date","month","day","year","string","Wrapper","Grid","blog","fontFamily","fontSize","lineHeight","time","color","ProfilePicture","Gravatar","FollowButton","PostAuthor","minutes","cups","className","showFollow","timeToRead","columns","styled_css_grid_esm","middle","email","alt","width","height","href","twitter","target","PostAuthor_Date","components_Time","pubdate","Math","round","Array","fill","join","bool","number","GridContainer","list","item","border","Body","Cell","padding","Footer","Title","h2","margin","TitleLink","hover","Text","text","Label","div","PostCard","post","rows","fields","slug","gatsby_image_default","sizes","frontmatter","image","childImageSharp","excerpt","fillRule","shape","PostCardList","ul","gap","alignContent","key","components_PostCard","array"],"mappings":"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","file":"component---src-templates-tag-page-js-9e0a7f28a182e537a37f.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\nimport styled from 'styled-components';\nimport PostCardList from '../components/PostCardList';\nimport { FormattedMessage } from 'react-intl';\nimport Helmet from 'react-helmet';\nimport Layout from '../components/layout';\n\nconst Header = styled.header`\n  text-align: center;\n  font-size: ${({ theme }) => theme.scale(1)};\n`;\n\nconst TagName = styled.span`\n  font-size: ${({ theme }) => theme.scale(5)};\n  display: block;\n  text-align: center;\n`;\n\nconst AllTagsLink = styled(Link)`\n  text-align: center;\n  padding: ${({ theme }) => theme.scale(1)} 0;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.green};\n  font-size: ${({ theme }) => theme.scale(0)};\n  display: block;\n  position: relative;\n  text-decoration: underline;\n  transition: 0.3s;\n\n  &:hover {\n      color: ${({ theme }) => theme.colors.white};\n      transition: 0.3s;\n  }\n`;\n\nconst TagRoute = ({ data, pageContext, location }) => {\n  const posts = data.allMarkdownRemark.edges.map(p => p.node);\n  const { author } = data.site.siteMetadata;\n\n  const allTagsLink = (\n    <FormattedMessage id=\"tags.allTagsLink\" >\n      {(txt) => (\n        <AllTagsLink\n          to={`/${pageContext.langKey}/tags/`}\n        >\n          {txt}\n        </AllTagsLink>\n      )}\n    </FormattedMessage>\n  );\n\n  return (\n    <Layout location={location}>\n      <section>\n        <Header>\n          <FormattedMessage id=\"tags\">\n            {(txt) => (\n              <Helmet\n                title={`${pageContext.tag} | ${txt}`}\n                meta={[{ name: 'description', content: txt }]}\n              />\n            )}\n          </FormattedMessage>\n          <FormattedMessage\n            id=\"tags.nPostsTaggedWith\"\n            values={{ nPosts: data.allMarkdownRemark.totalCount }}\n          />\n          <TagName>“{pageContext.tag}”</TagName>\n          {allTagsLink}\n        </Header>\n        <PostCardList\n          posts={posts} author={author}\n        />\n        <footer>\n          {allTagsLink}\n        </footer>\n      </section>\n    </Layout>\n  );\n};\n\nTagRoute.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object.isRequired,\n  pageContext: PropTypes.object\n};\n\nexport default TagRoute;\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String, $langKey: String) {\n  site {\n    siteMetadata {\n      author {\n        name\n        homeCity\n        email\n        defaultLink\n      }\n    }\n  },\n  allMarkdownRemark(limit: 1000,\n    sort: {fields: [frontmatter___date], order: DESC},\n    filter: {\n      frontmatter: {\n        tags: {in: [$tag]},\n        draft: {ne: true}\n      },\n      fields: {\n        langKey: {eq: $langKey}\n      }\n    }) {\n    totalCount\n    edges {\n      node {\n        frontmatter{\n          title,\n          date,\n          image {\n            childImageSharp{\n                sizes(maxWidth: 750) {\n                    ...GatsbyImageSharpSizes\n                }\n            }\n          }\n        },\n        fields{\n          slug\n          langKey\n        },\n        excerpt\n      }\n    }\n  }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedDate } from 'react-intl';\n\nconst Time = (props) => {\n  return (\n    <time {...props} dateTime={props.date}>\n      <FormattedDate\n        value={new Date(props.date)}\n        month=\"long\"\n        day=\"numeric\"\n        year=\"numeric\"\n      />\n    </time>\n  );\n};\n\nTime.propTypes = {\n  date: PropTypes.string.isRequired\n};\n\nexport default Time;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\nimport Gravatar from 'react-gravatar';\nimport Time from '../components/Time';\nimport { formatReadingTime } from '../utils/helpers'\n\nconst Wrapper = styled(Grid)`\n  font-family: ${props => props.theme.blog.author.fontFamily};\n  font-size: ${props => props.theme.blog.author.fontSize};\n  line-height: ${props => props.theme.blog.author.lineHeight};\n`;\n\nconst Date = styled.span`\n  color: ${props => props.theme.blog.author.time.color};\n  display: block;\n`;\n\nconst ProfilePicture = styled(Gravatar)`\n  display: block;\n  border-radius: 50%;\n`;\n\nconst FollowButton = styled.a`\n  display: inline-block;\n  vertical-align: middle;\n  cursor: pointer;\n  height: 19px;\n  padding: 0 10px;\n  color: rgba(0,0,0,.84);\n  border: 1px solid rgba(0,0,0,.68);\n  border-radius: 4px;\n  user-select: none!important;\n  margin: 0 14px 4px;\n  span {\n    font-size: 13px;\n    line-height: 19px;\n    padding-bottom: 2px;\n  }\n`;\n\nconst PostAuthor = ({ author, className, date, showFollow, timeToRead }) => {\n  return (\n    <Wrapper columns={'50px 1fr'} className={className}>\n      <Cell middle>\n        <ProfilePicture email={author.email} alt={author.name} width={42} height={42} />\n      </Cell>\n      <Cell middle>\n        <span>\n          {author.name}\n          { showFollow \n            ? <FollowButton href={`http://twitter.com/${author.twitter}`} target=\"_blank\">\n              <span>Follow</span>\n            </FollowButton> \n            : null }\n        </span>\n        <Date>\n          <Time\n            pubdate=\"pubdate\"\n            date={date}\n          />{` • ${formatReadingTime(timeToRead)}`}\n        </Date>\n      </Cell>\n    </Wrapper>\n  );\n};\n\nPostAuthor.propTypes = {\n  author: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  date: PropTypes.string.isRequired,\n  showFollow: PropTypes.bool,\n  timeToRead: PropTypes.number.isRequired\n};\n\nexport default PostAuthor;\n","export const formatReadingTime = (minutes) => {\n  let cups = Math.round(minutes / 5);\n  return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from './Link';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\nimport Img from 'gatsby-image';\nimport Author from './PostAuthor';\n\nconst GridContainer = styled(Grid)`\n  border: ${props => props.theme.blog.list.item.border};\n  border-radius: 0.25rem;\n  height: 100%;\n`;\n\nconst Body = styled(Cell)`\n  padding: ${props => props.theme.blog.list.item.padding};\n`;\n\nconst Footer = styled(Cell)`\n  font-family: ${props => props.theme.blog.author.fontFamily};\n  font-size: ${props => props.theme.blog.author.fontSize};\n  padding: ${({ theme }) => `${theme.scale(-1.5)} ${theme.scale(1.2)} ${theme.scale(0)}`};\n  line-height: ${props => props.theme.blog.author.lineHeight};\n  height: auto;\n  position: relative;\n`;\n\nconst Title = styled.h2`\n  padding: 0;\n  font-family: ${props => props.theme.blog.list.item.title.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.title.fontSize};\n  line-height: ${props => props.theme.blog.list.item.title.lineHeight};\n  margin: ${props => props.theme.blog.list.item.title.margin};\n`;\n\nconst TitleLink = styled(Link)`\n  color: ${props => props.theme.blog.list.item.title.color};\n  &:hover {\n    color: ${props => props.theme.blog.list.item.title.hover.color};\n  }\n`;\n\nconst Text = styled.p`\n  font-family: ${props => props.theme.blog.list.item.text.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.text.fontSize};\n  color: ${props => props.theme.blog.list.item.text.color};\n  margin: ${props => props.theme.blog.list.item.text.margin};\n  padding: ${props => props.theme.blog.list.item.text.padding};\n  line-height: ${props => props.theme.blog.list.item.text.lineHeight};\n`;\n\nconst Label = styled.div`\n  position: absolute;\n  right: 18px;\n  bottom: 18px;\n`;\n\nconst PostCard = ({ post, author }) => {\n  return (\n    <GridContainer columns={1} rows={'auto 1fr auto'}>\n      <Cell>\n        <Link to={post.fields.slug}>\n          <Img sizes={post.frontmatter.image.childImageSharp.sizes} />\n        </Link>\n      </Cell>\n      <Body>\n        <Title>\n          <TitleLink to={post.fields.slug}>\n            {post.frontmatter.title}\n          </TitleLink>\n        </Title>\n        <Text>{post.excerpt}</Text>\n      </Body>\n      <Footer>\n        <Author author={author} date={post.frontmatter.date} timeToRead={post.timeToRead} />\n        <Label>\n          <Link to={post.fields.slug}>\n            <svg width=\"25\" height=\"25\"><path d=\"M19 6c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v14.66h.012c.01.103.045.204.12.285a.5.5 0 0 0 .706.03L12.5 16.85l5.662 4.126a.508.508 0 0 0 .708-.03.5.5 0 0 0 .118-.285H19V6zm-6.838 9.97L7 19.636V6c0-.55.45-1 1-1h9c.55 0 1 .45 1 1v13.637l-5.162-3.668a.49.49 0 0 0-.676 0z\" fillRule=\"evenodd\" /></svg>\n          </Link>\n        </Label>\n      </Footer>\n    </GridContainer>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    fields: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      langKey: PropTypes.string.isRequired\n    }),\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired\n    }),\n    excerpt: PropTypes.string.isRequired\n  }),\n  author: PropTypes.object.isRequired\n};\n\nexport default PostCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostCard from './PostCard';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\n\nconst Ul = styled.ul`\n  list-style: none;\n  margin: ${props => props.theme.blog.list.ul.margin};\n  padding: ${props => props.theme.blog.list.ul.padding};\n`;\n\nconst PostCardList = (props) => {\n  return (\n    <nav>\n      {/* <Ul>\n        {props.posts.map(post =>\n          <Post key={post.fields.slug} post={post} />\n        )}\n      </Ul> */}\n      <Grid columns=\"repeat(auto-fit,minmax(360px,1fr))\" gap=\"30px\" alignContent=\"stretch\">\n        {props.posts.map(post =>\n          <Cell key={post.fields.slug}>\n            <PostCard post={post} author={props.author} />\n          </Cell>\n        )}\n      </Grid>\n    </nav>\n  );\n};\n\nPostCardList.propTypes = {\n  posts: PropTypes.array.isRequired,\n  author: PropTypes.object.isRequired\n};\n\nexport default PostCardList;\n"],"sourceRoot":""}