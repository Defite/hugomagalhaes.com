{"version":3,"sources":["webpack:///./src/pages/blog/index.pt.js","webpack:///./src/components/Time.js","webpack:///./src/components/PostAuthor.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/PostCard.js","webpack:///./src/components/PostCardList.js","webpack:///./src/components/H1.js","webpack:///./src/components/pages/Blog.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_pages_Blog__WEBPACK_IMPORTED_MODULE_1__","props","a","createElement","Time","react_default","Object","assign","dateTime","date","index_es","value","Date","month","day","year","propTypes","PropTypes","string","isRequired","Wrapper","styled","Grid","withConfig","displayName","componentId","theme","blog","author","fontFamily","fontSize","lineHeight","span","time","color","ProfilePicture","Gravatar","FollowButton","PostAuthor","_ref","minutes","cups","className","showFollow","timeToRead","columns","styled_css_grid_esm","middle","email","alt","name","width","height","href","twitter","target","PostAuthor_Date","components_Time","pubdate","Math","round","Array","fill","join","object","bool","number","GridContainer","list","item","border","Body","Cell","padding","Footer","scale","Title","h2","title","margin","TitleLink","Link","hover","Text","p","text","Label","div","PostCard","_ref2","post","rows","to","fields","slug","gatsby_image_default","sizes","frontmatter","image","childImageSharp","excerpt","fillRule","shape","langKey","PostCardList","ul","gap","alignContent","posts","map","key","components_PostCard","array","H1","h1","textAlign","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_PostCardList__WEBPACK_IMPORTED_MODULE_2__","_H1__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","react_intl__WEBPACK_IMPORTED_MODULE_5__","_layout__WEBPACK_IMPORTED_MODULE_6__","Blog","data","site","siteMetadata","location","id","txt","meta","content","allMarkdownRemark","edges","node"],"mappings":"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","file":"component---src-pages-blog-index-pt-js-cb5e466d47a87637e3ae.js","sourcesContent":["import React from 'react';\nimport Blog from '../../components/pages/Blog';\nimport { graphql } from 'gatsby';\n\nexport default (props) => <Blog {...props} />;\n\nexport const pageQuery = graphql`\n  query BlogPtQuery {\n    site {\n      siteMetadata {\n        author {\n          name\n          homeCity\n          email\n          defaultLink\n        }\n      }\n    },\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { draft: { ne: true } },\n        fields: { langKey: { regex: \"/(pt|any)/\" } }\n      },\n    ) {\n      edges {\n        node{\n          frontmatter{\n            title,\n            tags,\n            date,\n            image {\n              childImageSharp{\n                  sizes(maxWidth: 750) {\n                      ...GatsbyImageSharpSizes\n                  }\n              }\n            }\n          },\n          fields{\n            slug,\n            langKey,\n            tagSlugs{\n              tag,\n              link\n            }\n          },\n          excerpt\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedDate } from 'react-intl';\n\nconst Time = (props) => {\n  return (\n    <time {...props} dateTime={props.date}>\n      <FormattedDate\n        value={new Date(props.date)}\n        month=\"long\"\n        day=\"numeric\"\n        year=\"numeric\"\n      />\n    </time>\n  );\n};\n\nTime.propTypes = {\n  date: PropTypes.string.isRequired\n};\n\nexport default Time;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\nimport Gravatar from 'react-gravatar';\nimport Time from '../components/Time';\nimport { formatReadingTime } from '../utils/helpers'\n\nconst Wrapper = styled(Grid)`\n  font-family: ${props => props.theme.blog.author.fontFamily};\n  font-size: ${props => props.theme.blog.author.fontSize};\n  line-height: ${props => props.theme.blog.author.lineHeight};\n`;\n\nconst Date = styled.span`\n  color: ${props => props.theme.blog.author.time.color};\n  display: block;\n`;\n\nconst ProfilePicture = styled(Gravatar)`\n  display: block;\n  border-radius: 50%;\n`;\n\nconst FollowButton = styled.a`\n  display: inline-block;\n  vertical-align: middle;\n  cursor: pointer;\n  height: 19px;\n  padding: 0 10px;\n  color: rgba(0,0,0,.84);\n  border: 1px solid rgba(0,0,0,.68);\n  border-radius: 4px;\n  user-select: none!important;\n  margin: 0 14px 4px;\n  span {\n    font-size: 13px;\n    line-height: 19px;\n    padding-bottom: 2px;\n  }\n`;\n\nconst PostAuthor = ({ author, className, date, showFollow, timeToRead }) => {\n  return (\n    <Wrapper columns={'50px 1fr'} className={className}>\n      <Cell middle>\n        <ProfilePicture email={author.email} alt={author.name} width={42} height={42} />\n      </Cell>\n      <Cell middle>\n        <span>\n          {author.name}\n          { showFollow \n            ? <FollowButton href={`http://twitter.com/${author.twitter}`} target=\"_blank\">\n              <span>Follow</span>\n            </FollowButton> \n            : null }\n        </span>\n        <Date>\n          <Time\n            pubdate=\"pubdate\"\n            date={date}\n          />{` • ${formatReadingTime(timeToRead)}`}\n        </Date>\n      </Cell>\n    </Wrapper>\n  );\n};\n\nPostAuthor.propTypes = {\n  author: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  date: PropTypes.string.isRequired,\n  showFollow: PropTypes.bool,\n  timeToRead: PropTypes.number.isRequired\n};\n\nexport default PostAuthor;\n","export const formatReadingTime = (minutes) => {\n  let cups = Math.round(minutes / 5);\n  return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from './Link';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\nimport Img from 'gatsby-image';\nimport Author from './PostAuthor';\n\nconst GridContainer = styled(Grid)`\n  border: ${props => props.theme.blog.list.item.border};\n  border-radius: 0.25rem;\n  height: 100%;\n`;\n\nconst Body = styled(Cell)`\n  padding: ${props => props.theme.blog.list.item.padding};\n`;\n\nconst Footer = styled(Cell)`\n  font-family: ${props => props.theme.blog.author.fontFamily};\n  font-size: ${props => props.theme.blog.author.fontSize};\n  padding: ${({ theme }) => `${theme.scale(-1.5)} ${theme.scale(1.2)} ${theme.scale(0)}`};\n  line-height: ${props => props.theme.blog.author.lineHeight};\n  height: auto;\n  position: relative;\n`;\n\nconst Title = styled.h2`\n  padding: 0;\n  font-family: ${props => props.theme.blog.list.item.title.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.title.fontSize};\n  line-height: ${props => props.theme.blog.list.item.title.lineHeight};\n  margin: ${props => props.theme.blog.list.item.title.margin};\n`;\n\nconst TitleLink = styled(Link)`\n  color: ${props => props.theme.blog.list.item.title.color};\n  &:hover {\n    color: ${props => props.theme.blog.list.item.title.hover.color};\n  }\n`;\n\nconst Text = styled.p`\n  font-family: ${props => props.theme.blog.list.item.text.fontFamily};\n  font-size: ${props => props.theme.blog.list.item.text.fontSize};\n  color: ${props => props.theme.blog.list.item.text.color};\n  margin: ${props => props.theme.blog.list.item.text.margin};\n  padding: ${props => props.theme.blog.list.item.text.padding};\n  line-height: ${props => props.theme.blog.list.item.text.lineHeight};\n`;\n\nconst Label = styled.div`\n  position: absolute;\n  right: 18px;\n  bottom: 18px;\n`;\n\nconst PostCard = ({ post, author }) => {\n  return (\n    <GridContainer columns={1} rows={'auto 1fr auto'}>\n      <Cell>\n        <Link to={post.fields.slug}>\n          <Img sizes={post.frontmatter.image.childImageSharp.sizes} />\n        </Link>\n      </Cell>\n      <Body>\n        <Title>\n          <TitleLink to={post.fields.slug}>\n            {post.frontmatter.title}\n          </TitleLink>\n        </Title>\n        <Text>{post.excerpt}</Text>\n      </Body>\n      <Footer>\n        <Author author={author} date={post.frontmatter.date} timeToRead={post.timeToRead} />\n        <Label>\n          <Link to={post.fields.slug}>\n            <svg width=\"25\" height=\"25\"><path d=\"M19 6c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v14.66h.012c.01.103.045.204.12.285a.5.5 0 0 0 .706.03L12.5 16.85l5.662 4.126a.508.508 0 0 0 .708-.03.5.5 0 0 0 .118-.285H19V6zm-6.838 9.97L7 19.636V6c0-.55.45-1 1-1h9c.55 0 1 .45 1 1v13.637l-5.162-3.668a.49.49 0 0 0-.676 0z\" fillRule=\"evenodd\" /></svg>\n          </Link>\n        </Label>\n      </Footer>\n    </GridContainer>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    fields: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      langKey: PropTypes.string.isRequired\n    }),\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired\n    }),\n    excerpt: PropTypes.string.isRequired\n  }),\n  author: PropTypes.object.isRequired\n};\n\nexport default PostCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostCard from './PostCard';\nimport styled from 'styled-components';\nimport { Grid, Cell } from 'styled-css-grid';\n\nconst Ul = styled.ul`\n  list-style: none;\n  margin: ${props => props.theme.blog.list.ul.margin};\n  padding: ${props => props.theme.blog.list.ul.padding};\n`;\n\nconst PostCardList = (props) => {\n  return (\n    <nav>\n      {/* <Ul>\n        {props.posts.map(post =>\n          <Post key={post.fields.slug} post={post} />\n        )}\n      </Ul> */}\n      <Grid columns=\"repeat(auto-fit,minmax(360px,1fr))\" gap=\"30px\" alignContent=\"stretch\">\n        {props.posts.map(post =>\n          <Cell key={post.fields.slug}>\n            <PostCard post={post} author={props.author} />\n          </Cell>\n        )}\n      </Grid>\n    </nav>\n  );\n};\n\nPostCardList.propTypes = {\n  posts: PropTypes.array.isRequired,\n  author: PropTypes.object.isRequired\n};\n\nexport default PostCardList;\n","import styled from 'styled-components';\n\nconst H1 = styled.h1`\n  font-size: ${props => props.theme.h1.fontSize};\n  margin: ${props => props.theme.h1.margin};\n  padding: ${props => props.theme.h1.padding};\n  text-align: ${props => props.theme.h1.textAlign};\n`;\n\nexport default H1;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostCardList from '../PostCardList';\nimport H1 from '../H1';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport Layout from '../layout';\n\nconst Blog = (props) => {\n  const { author } = props.data.site.siteMetadata;\n  return (\n    <Layout location={props.location}>\n      <section className=\"posts\">\n        <FormattedMessage id=\"posts\">\n          {(txt) => (\n            <header>\n              <Helmet\n                title={txt}\n                meta={[{ name: 'description', content: txt }]}\n              />\n              <H1>\n                {txt}\n              </H1>\n            </header>\n          )}\n        </FormattedMessage>\n        <PostCardList\n          posts={props.data.allMarkdownRemark.edges.map(p => p.node)} author={author}\n        />\n      </section>\n    </Layout>\n  );\n};\n\nBlog.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default Blog;\n"],"sourceRoot":""}